<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <SavingAnalyticObjects />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Tableau Query History' inline='true' name='federated.13fq8y81qk9rov0zmpu4q1hqvb06' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='au_demo2.ap-southeast-2.snowflakecomputing.com' name='snowflake.0f2llu31odeyy617jiwxn1c8ig56'>
            <connection authentication='Username Password' class='snowflake' dbname='CITIBIKE' odbc-connect-string-extras='' one-time-sql='' schema='PUBLIC' server='au_demo2.ap-southeast-2.snowflakecomputing.com' service='' username='jane' warehouse='BI_MEDIUM_WH'>
              <connection-customization class='snowflake' enabled='false' version='18.1'>
                <vendor name='snowflake' />
                <driver name='snowflake' />
                <customizations>
                  <customization name='CAP_FAST_METADATA' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='snowflake.0f2llu31odeyy617jiwxn1c8ig56' name='TABLEAU_QUERY_HISTORY' table='[PUBLIC].[TABLEAU_QUERY_HISTORY]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>QUERY_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QUERY_ID]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUERY_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUERY_TEXT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QUERY_TEXT]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUERY_TEXT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATABASE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATABASE_NAME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>DATABASE_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHEMA_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SCHEMA_NAME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>SCHEMA_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUERY_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QUERY_TYPE]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUERY_TYPE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SESSION_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SESSION_ID]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>SESSION_ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[USER_NAME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>USER_NAME</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROLE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ROLE_NAME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>ROLE_NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WAREHOUSE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WAREHOUSE_NAME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>WAREHOUSE_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WAREHOUSE_SIZE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WAREHOUSE_SIZE]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>WAREHOUSE_SIZE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WAREHOUSE_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WAREHOUSE_TYPE]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>WAREHOUSE_TYPE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUERY_TAG</remote-name>
            <remote-type>129</remote-type>
            <local-name>[QUERY_TAG]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUERY_TAG</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXECUTION_STATUS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EXECUTION_STATUS]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>EXECUTION_STATUS</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ERROR_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ERROR_CODE]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>ERROR_CODE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ERROR_MESSAGE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ERROR_MESSAGE]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>ERROR_MESSAGE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>START_TIME</remote-name>
            <remote-type>7</remote-type>
            <local-name>[START_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>START_TIME</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>END_TIME</remote-name>
            <remote-type>7</remote-type>
            <local-name>[END_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>END_TIME</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_ELAPSED_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_ELAPSED_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>TOTAL_ELAPSED_TIME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMPILATION_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COMPILATION_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>COMPILATION_TIME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EXECUTION_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[EXECUTION_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>EXECUTION_TIME</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUEUED_PROVISIONING_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[QUEUED_PROVISIONING_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUEUED_PROVISIONING_TIME</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUEUED_REPAIR_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[QUEUED_REPAIR_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUEUED_REPAIR_TIME</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUEUED_OVERLOAD_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[QUEUED_OVERLOAD_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>QUEUED_OVERLOAD_TIME</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRANSACTION_BLOCKED_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TRANSACTION_BLOCKED_TIME]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>TRANSACTION_BLOCKED_TIME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTBOUND_DATA_TRANSFER_CLOUD</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OUTBOUND_DATA_TRANSFER_CLOUD]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>OUTBOUND_DATA_TRANSFER_CLOUD</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTBOUND_DATA_TRANSFER_REGION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OUTBOUND_DATA_TRANSFER_REGION]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>OUTBOUND_DATA_TRANSFER_REGION</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OUTBOUND_DATA_TRANSFER_BYTES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OUTBOUND_DATA_TRANSFER_BYTES]</local-name>
            <parent-name>[TABLEAU_QUERY_HISTORY]</parent-name>
            <remote-alias>OUTBOUND_DATA_TRANSFER_BYTES</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[ctd:QUERY_ID:qk]&quot;' value='Num Queries' />
        </aliases>
      </column>
      <column caption='Compilation Time' datatype='integer' name='[COMPILATION_TIME]' role='measure' type='quantitative' />
      <column caption='Database Name' datatype='string' name='[DATABASE_NAME]' role='dimension' type='nominal' />
      <column caption='End Time' datatype='datetime' name='[END_TIME]' role='dimension' type='ordinal' />
      <column caption='Error Code' datatype='integer' name='[ERROR_CODE]' role='dimension' type='ordinal' />
      <column caption='Error Message' datatype='string' name='[ERROR_MESSAGE]' role='dimension' type='nominal' />
      <column caption='Execution Status' datatype='string' name='[EXECUTION_STATUS]' role='dimension' type='nominal' />
      <column caption='Execution Time' datatype='integer' name='[EXECUTION_TIME]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Outbound Data Transfer Bytes' datatype='integer' name='[OUTBOUND_DATA_TRANSFER_BYTES]' role='measure' type='quantitative' />
      <column caption='Outbound Data Transfer Cloud' datatype='string' name='[OUTBOUND_DATA_TRANSFER_CLOUD]' role='dimension' type='nominal' />
      <column caption='Outbound Data Transfer Region' datatype='string' name='[OUTBOUND_DATA_TRANSFER_REGION]' role='dimension' type='nominal' />
      <column caption='Query Id' datatype='string' name='[QUERY_ID]' role='dimension' type='nominal' />
      <column caption='Query Tag' datatype='string' name='[QUERY_TAG]' role='dimension' type='nominal' />
      <column caption='Query Text - Split 1' datatype='string' name='[QUERY_TEXT - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[QUERY_TEXT]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [QUERY_TEXT], &quot;WHERE&quot;, 1 ) )' />
      </column>
      <column caption='Query Text' datatype='string' name='[QUERY_TEXT]' role='dimension' type='nominal' />
      <column caption='Query Type' datatype='string' name='[QUERY_TYPE]' role='dimension' type='nominal' />
      <column caption='Queued Overload Time' datatype='integer' name='[QUEUED_OVERLOAD_TIME]' role='measure' type='quantitative' />
      <column caption='Queued Provisioning Time' datatype='integer' name='[QUEUED_PROVISIONING_TIME]' role='measure' type='quantitative' />
      <column caption='Queued Repair Time' datatype='integer' name='[QUEUED_REPAIR_TIME]' role='measure' type='quantitative' />
      <column datatype='string' name='[Query Id &amp; Start Time (clusters)]' parent-model='[AnalyticModel:{3beba015-c99f-43b9-aff6-53acf02b63a1}]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Query Id &amp; Start Time]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>(&quot;0218be03-2362-4d28-b8fd-8c0c5372018c&quot;,#2018-08-25 11:45:05.880#)</value>
            <value>(&quot;026cb1ee-ab10-437d-a4d8-74e65a5eebda&quot;,#2018-08-25 11:52:28.099#)</value>
            <value>(&quot;028315cb-1b56-440f-b36f-9ccb43177542&quot;,#2018-08-25 11:54:06.547#)</value>
            <value>(&quot;0288a984-833b-4a17-94d4-bbb700a95aca&quot;,#2018-08-25 11:45:12.100#)</value>
            <value>(&quot;08af7e5f-15f9-4ba0-beb5-479bbc5629b9&quot;,#2018-08-25 11:43:18.383#)</value>
            <value>(&quot;127363a3-baac-4a1b-a2c6-520729c41719&quot;,#2018-08-25 11:45:03.794#)</value>
            <value>(&quot;131dc9a7-0971-4dea-8ca6-dd68eae8b607&quot;,#2018-08-25 11:55:03.475#)</value>
            <value>(&quot;133893f3-e96b-45bf-9689-7acc475f0e6e&quot;,#2018-08-25 11:43:23.057#)</value>
            <value>(&quot;14ceb736-f26e-4eb2-a950-993bc774a674&quot;,#2018-08-25 11:55:14.034#)</value>
            <value>(&quot;15c3969c-6ed7-452b-999f-dfc3898a40f3&quot;,#2018-08-25 11:45:09.883#)</value>
            <value>(&quot;16cca1ac-e0c2-4abf-97d2-716eebe2f509&quot;,#2018-08-25 11:54:13.964#)</value>
            <value>(&quot;19186f10-5252-4532-84ba-45507ab9a106&quot;,#2018-08-25 11:45:01.956#)</value>
            <value>(&quot;198ff500-2d11-4c15-9636-f4237927c602&quot;,#2018-08-25 11:45:09.889#)</value>
            <value>(&quot;1a0b7a8a-9474-4dd3-8c6c-d7d8c461921e&quot;,#2018-08-25 11:43:20.839#)</value>
            <value>(&quot;1b06befa-97cc-4a2d-88a9-0106c0fd14c8&quot;,#2018-08-25 11:45:07.764#)</value>
            <value>(&quot;1b63444a-8508-4239-a3e5-ae7f41bb6260&quot;,#2018-08-25 11:45:01.976#)</value>
            <value>(&quot;1c2cd037-368f-4edd-a40c-a45126607621&quot;,#2018-08-25 11:54:13.983#)</value>
            <value>(&quot;1cf85358-7f12-4e24-af4b-76fb167109e5&quot;,#2018-08-25 11:54:08.466#)</value>
            <value>(&quot;200ffa56-25ab-4038-9fb1-970832608c35&quot;,#2018-08-25 11:43:27.032#)</value>
            <value>(&quot;2260ee87-232b-4430-99c9-0165f30d4363&quot;,#2018-08-25 11:43:20.840#)</value>
            <value>(&quot;229f2f5c-e286-478e-87b2-3756bcc79313&quot;,#2018-08-25 11:54:06.477#)</value>
            <value>(&quot;23ac1379-5510-4872-a5b8-2b442c86538f&quot;,#2018-08-25 11:43:29.147#)</value>
            <value>(&quot;25a4ccf5-1638-4b22-9ca0-3110687c0a3e&quot;,#2018-08-25 11:54:13.966#)</value>
            <value>(&quot;25af510a-6d37-4a45-aaf0-93a9deaa4ad7&quot;,#2018-08-25 11:55:12.531#)</value>
            <value>(&quot;2763c493-d7b7-426d-9b46-ec7b6c32948c&quot;,#2018-08-25 11:43:23.052#)</value>
            <value>(&quot;2a15f94d-a95c-4d7e-9adf-c204d47f0dd2&quot;,#2018-08-25 11:43:25.090#)</value>
            <value>(&quot;2b15c335-6e62-47d9-9e51-864e60adb640&quot;,#2018-08-25 11:54:14#)</value>
            <value>(&quot;2c4f608a-e074-47d2-88b3-4690dcfd3f8a&quot;,#2018-08-25 11:55:10.597#)</value>
            <value>(&quot;2ce38439-e639-4e6c-8bd6-a926fba6e7df&quot;,#2018-08-25 11:45:12.091#)</value>
            <value>(&quot;2f4e2eff-30dd-4e9f-b541-fff6bd7f9afe&quot;,#2018-08-25 11:54:12.271#)</value>
            <value>(&quot;2f5fc9a0-ee4b-43fd-9c72-f11cf0f6cd45&quot;,#2018-08-25 11:44:59.770#)</value>
            <value>(&quot;2fb31ffb-d0c4-4a39-aded-123c163c0fe9&quot;,#2018-08-25 11:45:01.961#)</value>
            <value>(&quot;315a5d1f-4471-4569-98d4-1e57e0298db8&quot;,#2018-08-25 11:52:30.302#)</value>
            <value>(&quot;3189ee36-04d0-41bc-b461-3c1559465716&quot;,#2018-08-25 11:54:08.410#)</value>
            <value>(&quot;32d535a8-ee29-4078-8746-5122fb47d054&quot;,#2018-08-25 11:54:59.505#)</value>
            <value>(&quot;32dea564-b0b0-460f-b8e5-35fd17eea6a4&quot;,#2018-08-25 11:38:29.602#)</value>
            <value>(&quot;34be4be5-18e9-4377-b110-dc62f736cbba&quot;,#2018-08-25 11:43:18.384#)</value>
            <value>(&quot;387432e5-2cbc-4740-bae9-bb6461b18887&quot;,#2018-08-25 11:55:03.487#)</value>
            <value>(&quot;399ba7fb-46d6-4049-a1c8-012bc83f4975&quot;,#2018-08-25 11:45:05.878#)</value>
            <value>(&quot;3a571427-ca66-4006-834e-46fde7916807&quot;,#2018-08-25 11:46:21.014#)</value>
            <value>(&quot;3c116a9c-4f7a-4d27-ae18-8c31786b30d7&quot;,#2018-08-25 11:45:09.883#)</value>
            <value>(&quot;3e7e1fd9-4cfd-41f1-b88c-2084764aaee5&quot;,#2018-08-25 11:44:59.753#)</value>
            <value>(&quot;3ed71422-b7c5-4e2a-a5ee-db88c078b391&quot;,#2018-08-25 11:43:20.829#)</value>
            <value>(&quot;40b6a5d1-3017-42d1-88de-db269b7d5c0f&quot;,#2018-08-25 11:54:12.290#)</value>
            <value>(&quot;40c0c0e5-2c0c-4ead-92f7-1697b64687ef&quot;,#2018-08-25 11:45:07.778#)</value>
            <value>(&quot;4471ace9-e787-4d32-aafd-cb7f849f97b1&quot;,#2018-08-25 11:55:08.585#)</value>
            <value>(&quot;44ae4513-1076-471e-9308-4002cd9cd644&quot;,#2018-08-25 11:54:02.276#)</value>
            <value>(&quot;47b0afd6-0e93-4c8b-bd23-9c02c93c05fa&quot;,#2018-08-25 11:54:08.421#)</value>
            <value>(&quot;485d733e-7565-4394-9a91-cf9d5d24a5e9&quot;,#2018-08-25 11:46:18.585#)</value>
            <value>(&quot;4ac788a0-51c1-417c-b5df-fd8d63acec7d&quot;,#2018-08-25 11:55:03.482#)</value>
            <value>(&quot;4b91d739-15d8-4090-8c69-fd05cb6dad76&quot;,#2018-08-25 11:54:10.317#)</value>
            <value>(&quot;4c6eac5c-1bb6-49dd-a02f-bad291ec4676&quot;,#2018-08-25 11:54:10.307#)</value>
            <value>(&quot;4d87876a-093f-4d66-bcd0-f1661b0858c4&quot;,#2018-08-25 11:45:01.983#)</value>
            <value>(&quot;4dc692d2-930d-4034-8862-020b95fe6869&quot;,#2018-08-25 11:55:10.584#)</value>
            <value>(&quot;531687ae-c1e7-4f96-865f-2a16ebef50b3&quot;,#2018-08-25 11:44:56.715#)</value>
            <value>(&quot;54d25df4-141a-48da-95d4-392152288a86&quot;,#2018-08-25 11:55:08.554#)</value>
            <value>(&quot;5853f74d-99bd-4e13-a7b6-fd22b4a12e9a&quot;,#2018-08-25 11:52:39.973#)</value>
            <value>(&quot;59a4d2ee-db88-428d-ac3a-c26c92f36bfc&quot;,#2018-08-25 11:55:05.096#)</value>
            <value>(&quot;5acf5a25-d0ee-4438-8d8f-bc4bc5bf6c42&quot;,#2018-08-25 11:44:59.753#)</value>
            <value>(&quot;5d9ecb8b-4e57-4981-a5be-94ce43f789a2&quot;,#2018-08-25 11:45:03.859#)</value>
            <value>(&quot;5f3a2964-c005-4b68-9eab-819f412e2ebd&quot;,#2018-08-25 11:45:12.103#)</value>
            <value>(&quot;5fcfd973-6639-4b33-ac89-97a57dcbd704&quot;,#2018-08-25 11:54:04.639#)</value>
            <value>(&quot;62e70890-5a4a-44d4-a40f-c6cb288ac9ba&quot;,#2018-08-25 11:54:04.636#)</value>
            <value>(&quot;652a5afb-3266-43d5-9b48-63f57a9bb383&quot;,#2018-08-25 11:55:06.879#)</value>
            <value>(&quot;65b939c4-aa2f-4e72-a836-e688389e0b75&quot;,#2018-08-25 11:55:03.482#)</value>
            <value>(&quot;66ebf084-b90f-4987-a16a-541e3b6c3a80&quot;,#2018-08-25 11:54:04.646#)</value>
            <value>(&quot;6881a34a-0c24-462c-b459-b26f92c8b305&quot;,#2018-08-25 11:54:06.547#)</value>
            <value>(&quot;6b0c10db-0fb5-4ca1-b408-cffa6aa5dffd&quot;,#2018-08-25 11:55:14.038#)</value>
            <value>(&quot;6c0572c1-f188-48fd-a6c3-1afd01114f24&quot;,#2018-08-25 11:54:06.483#)</value>
            <value>(&quot;6d5da1d1-8502-4226-b2ab-9f99b4ca8f72&quot;,#2018-08-25 11:55:06.910#)</value>
            <value>(&quot;7666f31b-119a-4682-b284-f98a2c93f4ac&quot;,#2018-08-25 11:43:20.818#)</value>
            <value>(&quot;76b748fa-4573-4d71-b97d-d6b97ca98722&quot;,#2018-08-25 11:45:03.856#)</value>
            <value>(&quot;831aeaa7-f5b3-4234-b594-739d863c9937&quot;,#2018-08-25 11:43:18.373#)</value>
            <value>(&quot;85dfb43d-d526-4ce0-9804-15c294eb2232&quot;,#2018-08-25 11:43:20.837#)</value>
            <value>(&quot;882fb253-588c-4e35-a7f6-e9e675644ac0&quot;,#2018-08-25 11:54:13.953#)</value>
            <value>(&quot;89447d1a-4bd8-4fde-ab2e-cbc7d9c5c4c1&quot;,#2018-08-25 11:55:05.097#)</value>
            <value>(&quot;8b391f5f-cfda-4f25-841d-40d5c66aea43&quot;,#2018-08-25 11:43:23.057#)</value>
            <value>(&quot;8b3d4afe-38c2-43bb-81ab-65ce5d0dfb0d&quot;,#2018-08-25 11:54:10.314#)</value>
            <value>(&quot;8c741f92-dc0e-438c-b93c-32cc51d9c637&quot;,#2018-08-25 11:43:29.149#)</value>
            <value>(&quot;8d1b0734-0a2f-46fc-bc72-f8a8d4041c08&quot;,#2018-08-25 11:55:06.897#)</value>
            <value>(&quot;9366f23a-8911-4afc-946a-cf8dbf79a648&quot;,#2018-08-25 11:54:04.651#)</value>
            <value>(&quot;94ccb932-6399-4aad-af63-7387ddf875ba&quot;,#2018-08-25 11:43:25.120#)</value>
            <value>(&quot;98e9b963-0256-417d-abe4-84f2c775453d&quot;,#2018-08-25 11:55:14.059#)</value>
            <value>(&quot;9a2c14b1-aac7-4899-89b6-1792cf14f123&quot;,#2018-08-25 11:55:14.066#)</value>
            <value>(&quot;9a5d64d5-f63d-4c25-b44d-26523ead324e&quot;,#2018-08-25 11:55:08.578#)</value>
            <value>(&quot;9b0ead2d-1a45-430f-b092-20e5369f2e00&quot;,#2018-08-25 11:54:12.290#)</value>
            <value>(&quot;9bb617e1-67b0-4a25-85cb-441615e605d5&quot;,#2018-08-25 11:43:25.109#)</value>
            <value>(&quot;9df55fc2-a3a4-4d70-8c4b-8c76939349d0&quot;,#2018-08-25 11:54:08.419#)</value>
            <value>(&quot;9f8168c2-e172-4fa1-931f-c349f7f48773&quot;,#2018-08-25 11:43:12.603#)</value>
            <value>(&quot;a095d13a-be38-4930-8a21-e2311ec854e6&quot;,#2018-08-25 11:55:06.886#)</value>
            <value>(&quot;a16d2ac4-f9ef-4441-8ead-ec8344e051f0&quot;,#2018-08-25 11:55:06.897#)</value>
            <value>(&quot;a35337e8-baf6-4cc7-9e96-8d35fb74ca51&quot;,#2018-08-25 11:38:27.251#)</value>
            <value>(&quot;a4e28469-83ec-4b30-9ac8-2a400a7c4e1a&quot;,#2018-08-25 11:46:16.098#)</value>
            <value>(&quot;a6d23961-40f6-4da6-b0a7-54cdef86f57e&quot;,#2018-08-25 11:43:29.143#)</value>
            <value>(&quot;ac626e6c-fc18-474c-a2e0-86f5f3b0dd84&quot;,#2018-08-25 11:43:12.617#)</value>
            <value>(&quot;acb4f6f0-9a9e-4460-8b5a-6325c676f797&quot;,#2018-08-25 11:55:12.558#)</value>
            <value>(&quot;af3a7092-c42d-477a-b61a-6852c9c540ba&quot;,#2018-08-25 11:55:05.080#)</value>
            <value>(&quot;af655f53-c69c-4a1c-9acf-7407b7c6fa7a&quot;,#2018-08-25 11:43:27.040#)</value>
            <value>(&quot;b0649c72-ec5a-4b51-9aad-54125138fb9c&quot;,#2018-08-25 11:54:12.239#)</value>
            <value>(&quot;b1b56235-dd76-4a40-bd67-a868b75efbc1&quot;,#2018-08-25 11:45:07.776#)</value>
            <value>(&quot;b1baee27-fc08-45bb-9c93-bbed6984f316&quot;,#2018-08-25 11:45:03.872#)</value>
            <value>(&quot;b25576ef-f56e-4f6c-a516-3664bfd4c73d&quot;,#2018-08-25 11:53:56.572#)</value>
            <value>(&quot;b270f805-ea39-406e-917e-447f1162b2a2&quot;,#2018-08-25 11:53:52.867#)</value>
            <value>(&quot;b2b66e00-2fb6-4993-a5d0-529289998e37&quot;,#2018-08-25 11:54:59.515#)</value>
            <value>(&quot;b480efc6-0589-4ebe-a2b3-e382a10711e5&quot;,#2018-08-25 11:55:03.482#)</value>
            <value>(&quot;b54d6438-6919-4397-a874-56fb60ca4db6&quot;,#2018-08-25 11:43:15.238#)</value>
            <value>(&quot;bbce1b8b-4e6b-40e8-ada3-7652c5c1c67b&quot;,#2018-08-25 11:45:05.864#)</value>
            <value>(&quot;bd6f9494-812c-4d5f-a2f9-a0d60240d096&quot;,#2018-08-25 11:55:08.559#)</value>
            <value>(&quot;c0c02237-a6b3-4830-bb09-74dcc743e897&quot;,#2018-08-25 11:54:59.521#)</value>
            <value>(&quot;c0d8c934-e027-4885-b8db-5f87345ceea6&quot;,#2018-08-25 11:45:09.889#)</value>
            <value>(&quot;c3cdf7c3-50ae-4843-b4d5-7af4676be072&quot;,#2018-08-25 11:43:25.104#)</value>
            <value>(&quot;c3f75348-8a53-4618-a031-cf74dd7fa240&quot;,#2018-08-25 11:43:23.054#)</value>
            <value>(&quot;c4361066-4c9b-43f4-8b03-69250fe1e211&quot;,#2018-08-25 11:38:30.340#)</value>
            <value>(&quot;c6085778-9846-4318-b160-79d59c9caa2c&quot;,#2018-08-25 11:45:05.880#)</value>
            <value>(&quot;c85d553b-7555-4d97-be7a-42ba974592be&quot;,#2018-08-25 11:43:25.120#)</value>
            <value>(&quot;cc4b8089-aa0f-45c7-8939-db6438b753c5&quot;,#2018-08-25 11:55:10.584#)</value>
            <value>(&quot;ccbc4ad7-b3d4-4096-b3c6-b5fdc83768c0&quot;,#2018-08-25 11:42:58.176#)</value>
            <value>(&quot;ce82f188-8a76-45c7-9e3d-aec3d382213c&quot;,#2018-08-25 11:46:13.326#)</value>
            <value>(&quot;cef9cce7-f3ef-4a30-98ce-a4edd1245343&quot;,#2018-08-25 11:43:27.026#)</value>
            <value>(&quot;d2940828-7073-4f0b-8ac1-ae5aaffff0a7&quot;,#2018-08-25 11:55:12.536#)</value>
            <value>(&quot;d32d79e1-10cf-415e-993b-40659151e8f5&quot;,#2018-08-25 11:45:09.885#)</value>
            <value>(&quot;d77d63a1-397a-4bb1-af0e-8c55662dae25&quot;,#2018-08-25 11:54:06.547#)</value>
            <value>(&quot;dccb6a78-5582-4f9a-9351-f9a6ea722336&quot;,#2018-08-25 11:43:27.043#)</value>
            <value>(&quot;de82139f-3011-4c07-9811-ab92e233de88&quot;,#2018-08-25 11:54:02.276#)</value>
            <value>(&quot;e01e5977-42a5-4cb4-be67-402ecf237f97&quot;,#2018-08-25 11:55:01.555#)</value>
            <value>(&quot;e3cc67fb-ee07-4d24-9c38-2f2517327b45&quot;,#2018-08-25 11:45:05.864#)</value>
            <value>(&quot;e4c78af4-acf0-44e6-b785-da4a1a4b122e&quot;,#2018-08-25 11:43:12.606#)</value>
            <value>(&quot;e7aa3a84-d931-4fae-bcb4-4ad3f44b2485&quot;,#2018-08-25 11:52:28.583#)</value>
            <value>(&quot;ea5e64be-a03f-4873-969c-53c995aa5e70&quot;,#2018-08-25 11:54:10.288#)</value>
            <value>(&quot;eb7d7c53-617d-4e4d-994e-3077f4de5ee0&quot;,#2018-08-25 11:45:01.965#)</value>
            <value>(&quot;ebb75542-405c-4495-bcd6-11b4f6f8271e&quot;,#2018-08-25 11:53:56.182#)</value>
            <value>(&quot;ec51efb5-0285-4032-a663-23e1a6369985&quot;,#2018-08-25 11:43:23.052#)</value>
            <value>(&quot;ed9fb195-defd-49c9-9e45-69621a6f3941&quot;,#2018-08-25 11:43:27.034#)</value>
            <value>(&quot;ee86ab56-c4e8-4012-8ade-073c8ce8637a&quot;,#2018-08-25 11:54:10.310#)</value>
            <value>(&quot;eeb9ba5c-8c52-4b6d-8395-227b4ea645a7&quot;,#2018-08-25 11:43:12.617#)</value>
            <value>(&quot;eef79403-577c-47e9-a767-10408fdc1cd0&quot;,#2018-08-25 11:54:04.630#)</value>
            <value>(&quot;ef320e08-a6ff-4ad4-8e7a-75585a9be942&quot;,#2018-08-25 11:55:05.097#)</value>
            <value>(&quot;ef3ada88-82e1-4a39-be7a-7e10adeca219&quot;,#2018-08-25 11:45:03.872#)</value>
            <value>(&quot;f115df31-9abf-4e40-b252-368a4f9180bc&quot;,#2018-08-25 11:43:18.366#)</value>
            <value>(&quot;f32a820c-3bbd-4cb4-9876-956d5ac25757&quot;,#2018-08-25 11:43:15.195#)</value>
            <value>(&quot;f8da7ed5-b753-4a66-be20-87cd896878cc&quot;,#2018-08-25 11:55:01.658#)</value>
            <value>(&quot;fb5aa739-5259-4348-a53b-1e3030622c47&quot;,#2018-08-25 11:43:12.627#)</value>
            <value>(&quot;fd6a89c0-80d6-4795-8aa2-3a8512ad727b&quot;,#2018-08-25 11:43:18.373#)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>(&quot;00b52d15-35f3-46fb-9c20-bab0e5feabeb&quot;,#2018-08-25 11:49:25.681#)</value>
            <value>(&quot;01131b5a-78dc-427a-b8ff-3c97292b772a&quot;,#2018-08-25 11:44:48.939#)</value>
            <value>(&quot;01f95407-35c8-4dbf-9cc3-9c9ad18452ab&quot;,#2018-08-25 11:52:34.593#)</value>
            <value>(&quot;02783ff8-44f8-4f97-aea5-7606e6eaf00a&quot;,#2018-08-25 11:43:08.053#)</value>
            <value>(&quot;029cdf40-dda2-47b8-b712-a3eda5589600&quot;,#2018-08-25 11:52:28.453#)</value>
            <value>(&quot;02f64fc6-fc66-4c20-b5b1-18f2a31dd280&quot;,#2018-08-25 11:38:51.100#)</value>
            <value>(&quot;04815862-b5db-4b97-b954-fca75125b972&quot;,#2018-08-25 11:38:40.776#)</value>
            <value>(&quot;06f0c8fd-7646-4f59-b12f-f99da1c37e18&quot;,#2018-08-25 11:43:29.153#)</value>
            <value>(&quot;090d3b1e-c119-48fa-9f27-c0264360a2be&quot;,#2018-08-25 11:48:30.402#)</value>
            <value>(&quot;093b9f3e-5f12-4396-b160-50a974f62dfc&quot;,#2018-08-25 11:38:45.715#)</value>
            <value>(&quot;0c60e4cc-767b-482b-9182-d7a749d77819&quot;,#2018-08-25 11:38:42.254#)</value>
            <value>(&quot;0d1d3d2f-8310-41ee-9fe4-dd3c6974c54f&quot;,#2018-08-25 11:52:37.349#)</value>
            <value>(&quot;1336667a-2f6d-4662-93db-58b376ae0e1d&quot;,#2018-08-25 11:43:10.237#)</value>
            <value>(&quot;13a1cd94-c143-4693-b035-2da3f20eb6b6&quot;,#2018-08-25 11:54:51.095#)</value>
            <value>(&quot;13b0cf12-c72c-4311-9b15-eccdd380945c&quot;,#2018-08-25 11:54:59.499#)</value>
            <value>(&quot;1444702f-fc1c-46bd-9deb-efce9b1eda80&quot;,#2018-08-25 11:38:38.989#)</value>
            <value>(&quot;14b295f4-8e7d-4b7e-8f25-5f5d23423f3e&quot;,#2018-08-25 11:38:38.989#)</value>
            <value>(&quot;14c75734-608a-4513-a3ee-84810c079103&quot;,#2018-08-25 11:38:49.718#)</value>
            <value>(&quot;1631f139-c8ad-4f88-8fe4-29f6eccd825a&quot;,#2018-08-25 11:38:47.132#)</value>
            <value>(&quot;16beaab8-9712-4783-9e71-7847509f1ec1&quot;,#2018-08-25 11:49:25.501#)</value>
            <value>(&quot;177b003d-6a80-449c-a16a-fa14e4a422f9&quot;,#2018-08-25 11:55:01.708#)</value>
            <value>(&quot;17a916ca-9dc8-4e19-b7b4-5846f2be99ac&quot;,#2018-08-25 11:48:30.402#)</value>
            <value>(&quot;1bc69a33-2d2f-4d21-8e28-936c39bce4f7&quot;,#2018-08-25 11:55:08.552#)</value>
            <value>(&quot;1c2637b4-ffdf-4232-bb8c-5d46d6789ccd&quot;,#2018-08-25 11:38:48.530#)</value>
            <value>(&quot;1c85c511-4efa-42ec-8658-a583bfa9334f&quot;,#2018-08-25 11:55:12.517#)</value>
            <value>(&quot;1df21cf7-7ab1-4b9c-a44c-a2ad5a957911&quot;,#2018-08-25 11:38:44.090#)</value>
            <value>(&quot;21255e3a-21cc-4980-bf02-ce9b98b693f5&quot;,#2018-08-25 11:48:30.424#)</value>
            <value>(&quot;21d8fb94-5927-4be7-8eef-578a9c57aaeb&quot;,#2018-08-25 11:54:51.060#)</value>
            <value>(&quot;222fe9dc-1c75-460d-a255-a3661e698d35&quot;,#2018-08-25 11:38:30.390#)</value>
            <value>(&quot;227ecd58-13ed-481b-bb8e-bbe76d418800&quot;,#2018-08-25 11:38:45.723#)</value>
            <value>(&quot;2289f8d9-4c2a-4ae3-8efb-a7f0bed5cbb4&quot;,#2018-08-25 11:52:38.684#)</value>
            <value>(&quot;22cd7896-bd6f-4c9b-a3b4-aa7017f850a7&quot;,#2018-08-25 11:38:38.990#)</value>
            <value>(&quot;2330fe2c-ce2d-4ab2-b4a9-935da6a4d4a3&quot;,#2018-08-25 11:52:41.530#)</value>
            <value>(&quot;2333593c-d14d-4e9c-bf7c-ce2beee121b0&quot;,#2018-08-25 11:43:16.372#)</value>
            <value>(&quot;26878ce4-5000-4c44-ad88-12837bea584f&quot;,#2018-08-25 11:44:48.949#)</value>
            <value>(&quot;26a9989d-300b-4cbf-b85d-68bf25b94807&quot;,#2018-08-25 11:45:57.670#)</value>
            <value>(&quot;275b7673-6573-4317-aea4-3cf3647a6ef9&quot;,#2018-08-25 11:52:41.547#)</value>
            <value>(&quot;2d6e3c0a-226f-497c-a0b5-74dd50ab5489&quot;,#2018-08-25 11:43:10.433#)</value>
            <value>(&quot;2df8d7f6-3653-4a53-87b7-fdbe8a1b26e6&quot;,#2018-08-25 11:48:30.424#)</value>
            <value>(&quot;36e0cd4e-84d0-4c23-be16-76cbfcbce2be&quot;,#2018-08-25 11:52:39.999#)</value>
            <value>(&quot;38074143-b590-4cf7-ad73-dbf2bfdf012c&quot;,#2018-08-25 11:38:40.710#)</value>
            <value>(&quot;386125f3-3222-47ca-b57b-ca42c53c37e0&quot;,#2018-08-25 11:38:30.390#)</value>
            <value>(&quot;38edd158-a690-46fd-97ee-f2ddc6934e0a&quot;,#2018-08-25 11:38:44.063#)</value>
            <value>(&quot;3a42f804-619f-4f00-a241-174937cf07be&quot;,#2018-08-25 11:52:34.491#)</value>
            <value>(&quot;3ab5f6fa-c9de-4706-90aa-c98609beb491&quot;,#2018-08-25 11:52:38.667#)</value>
            <value>(&quot;3b365b88-0efa-42a0-8734-f3ec4ce4f7de&quot;,#2018-08-25 11:38:44.006#)</value>
            <value>(&quot;3cb4cf42-dee7-40b1-a234-653ef4fa9f59&quot;,#2018-08-25 11:38:49.713#)</value>
            <value>(&quot;3e97092d-a2d1-414b-a80c-6822c5035e16&quot;,#2018-08-25 11:54:53.015#)</value>
            <value>(&quot;3ef7e5ed-672b-4ee4-b7ca-78e48e97c077&quot;,#2018-08-25 11:52:34.497#)</value>
            <value>(&quot;41798d49-5210-498b-a268-37b866b662da&quot;,#2018-08-25 11:38:38.989#)</value>
            <value>(&quot;4213d625-5208-4f60-9242-321b68554608&quot;,#2018-08-25 11:54:53.033#)</value>
            <value>(&quot;43527939-f8e5-4ced-83f7-0f09a23d9308&quot;,#2018-08-25 11:38:47.108#)</value>
            <value>(&quot;446fa6df-ae77-4c4b-b8aa-c55c2e41e4ea&quot;,#2018-08-25 11:52:35.965#)</value>
            <value>(&quot;4e14f943-93c1-4c6a-9cf3-a689f0c3c36e&quot;,#2018-08-25 11:38:45.734#)</value>
            <value>(&quot;4f418e57-1a92-44b5-be30-cbe17fa68b09&quot;,#2018-08-25 11:43:01.341#)</value>
            <value>(&quot;4fd24fe2-d506-49ee-b071-0c4709ad8024&quot;,#2018-08-25 11:43:16.563#)</value>
            <value>(&quot;504cf5f4-327b-4ee1-8077-06e1fde77d25&quot;,#2018-08-25 11:45:57.781#)</value>
            <value>(&quot;533bc054-d35f-4952-a175-9af7a28b2cf5&quot;,#2018-08-25 11:52:38.674#)</value>
            <value>(&quot;53f14372-e788-471c-8b5b-77b911450bd0&quot;,#2018-08-25 11:38:47.088#)</value>
            <value>(&quot;5429511b-7004-4f37-85b6-580b0bd880d1&quot;,#2018-08-25 11:43:08.050#)</value>
            <value>(&quot;545624ef-f88e-4a6a-9e95-8f94ade60d10&quot;,#2018-08-25 11:44:50.974#)</value>
            <value>(&quot;553b0a92-2e8d-46a3-8035-9ffa30bd2d95&quot;,#2018-08-25 11:43:15.189#)</value>
            <value>(&quot;57669458-ac61-45ad-a692-76b74babb378&quot;,#2018-08-25 11:54:50.938#)</value>
            <value>(&quot;59e08ede-a725-4789-a4ed-2eb811769c01&quot;,#2018-08-25 11:38:49.719#)</value>
            <value>(&quot;59f674e6-d7a1-44c6-8ab6-2931e774ebee&quot;,#2018-08-25 11:45:57.675#)</value>
            <value>(&quot;5a6008c4-33b5-48c3-9275-7847c9e07fda&quot;,#2018-08-25 11:55:01.536#)</value>
            <value>(&quot;5c1a27ee-ff1c-4c09-bef9-c39f1387f3ae&quot;,#2018-08-25 11:38:51.027#)</value>
            <value>(&quot;5eccf0c9-126d-4b57-84c1-b98a45528acc&quot;,#2018-08-25 11:52:42.672#)</value>
            <value>(&quot;5f5d4c86-fd39-4231-870a-2da6557424cf&quot;,#2018-08-25 11:52:42.683#)</value>
            <value>(&quot;60663202-ca81-4dc6-801b-a27a1096f004&quot;,#2018-08-25 11:52:35.955#)</value>
            <value>(&quot;6338ab3b-d133-42cd-8d0d-0c107f1c8a0b&quot;,#2018-08-25 11:55:14.033#)</value>
            <value>(&quot;65ccc7bb-f4c1-427c-bb4c-0798d8bfeb92&quot;,#2018-08-25 11:38:48.491#)</value>
            <value>(&quot;6ac81900-55f5-4930-8aeb-7e6f70c473ff&quot;,#2018-08-25 11:44:50.980#)</value>
            <value>(&quot;6fe9bc5e-e276-469d-b4af-c1dab9535705&quot;,#2018-08-25 11:43:29.141#)</value>
            <value>(&quot;741c04d3-b4e5-42d7-971b-9f0dc044b008&quot;,#2018-08-25 11:55:05.089#)</value>
            <value>(&quot;748126e6-da8b-4ccd-a97d-127327ad12e4&quot;,#2018-08-25 11:52:35.968#)</value>
            <value>(&quot;781995f1-5ea2-469d-b3f5-f245c911b6bd&quot;,#2018-08-25 11:38:48.528#)</value>
            <value>(&quot;7aca2606-a978-41a2-92fd-32b72d2a0a57&quot;,#2018-08-25 11:49:09.305#)</value>
            <value>(&quot;7d1128ee-0bc2-42af-8ab7-896fb6d0d07d&quot;,#2018-08-25 11:49:25.361#)</value>
            <value>(&quot;7d89eb10-48de-46d1-8579-91199cf8f36f&quot;,#2018-08-25 11:49:07.672#)</value>
            <value>(&quot;7f8035de-262d-451b-b645-cd5e6b65ee0b&quot;,#2018-08-25 11:44:50.990#)</value>
            <value>(&quot;8171026d-eda0-4c7c-80b0-b7100081fd15&quot;,#2018-08-25 11:52:38.737#)</value>
            <value>(&quot;835e5882-d6b0-4dd5-ba35-8864ffb1ffa6&quot;,#2018-08-25 11:55:10.582#)</value>
            <value>(&quot;841ee605-7ab3-4f52-9ca5-6d5a4dac648e&quot;,#2018-08-25 11:38:38.992#)</value>
            <value>(&quot;89429ac9-5302-440f-9c09-d94cb9adaaa5&quot;,#2018-08-25 11:38:49.722#)</value>
            <value>(&quot;8d0281a8-2bf0-49e3-907b-16ccecc0521f&quot;,#2018-08-25 11:54:53.029#)</value>
            <value>(&quot;8e1d0121-fdf6-4b90-b0cc-2f0f43576aae&quot;,#2018-08-25 11:54:08.377#)</value>
            <value>(&quot;8e2ece21-5944-4e0f-8972-915b20287999&quot;,#2018-08-25 11:44:50.973#)</value>
            <value>(&quot;8f59ca9f-b50a-4ca1-b6a9-8a52194f746a&quot;,#2018-08-25 11:52:35.985#)</value>
            <value>(&quot;909b9159-358b-4d67-ae37-64e528f0feca&quot;,#2018-08-25 11:44:49.047#)</value>
            <value>(&quot;90c4e875-d208-47c6-b8cd-1e34f97b254e&quot;,#2018-08-25 11:54:51.063#)</value>
            <value>(&quot;94961b9f-3e6f-4988-b813-4f31afdfd110&quot;,#2018-08-25 11:52:34.496#)</value>
            <value>(&quot;990174d4-d612-40d3-9c5d-0c64c21c53bd&quot;,#2018-08-25 11:52:38.686#)</value>
            <value>(&quot;9a3cd251-a3cd-4aff-88b1-c7014b51bfad&quot;,#2018-08-25 11:52:41.533#)</value>
            <value>(&quot;9bf53bda-34db-4742-aeb8-aeb152f1d9b1&quot;,#2018-08-25 11:48:30.406#)</value>
            <value>(&quot;9d214535-da35-4c68-be6a-2b44b8a5cca9&quot;,#2018-08-25 11:44:49.881#)</value>
            <value>(&quot;9ec186ee-1b3b-4b76-8053-c383f75bf2a2&quot;,#2018-08-25 11:54:51.063#)</value>
            <value>(&quot;9f6dba5d-9674-4433-b792-ad2ad207112d&quot;,#2018-08-25 11:54:51.059#)</value>
            <value>(&quot;a0cf3763-2af5-4dc5-8194-6e74d70f4e13&quot;,#2018-08-25 11:52:42.678#)</value>
            <value>(&quot;a0f4db10-4e23-4c16-8fa7-821980dbb9dc&quot;,#2018-08-25 11:49:25.586#)</value>
            <value>(&quot;a35b162b-0d56-4beb-ae36-52ce9c8b1039&quot;,#2018-08-25 11:52:41.549#)</value>
            <value>(&quot;a4400c56-fb85-48d0-8520-d043f07208cd&quot;,#2018-08-25 11:44:49.886#)</value>
            <value>(&quot;a4c13453-d51d-4da2-96a1-6396d86ad377&quot;,#2018-08-25 11:54:53.011#)</value>
            <value>(&quot;a5c1fcbb-0981-4928-a4cf-4e863d9c5ba9&quot;,#2018-08-25 11:38:47.117#)</value>
            <value>(&quot;a6ab6d5c-f479-4cc8-985d-4a406fe9f9b8&quot;,#2018-08-25 11:49:08.867#)</value>
            <value>(&quot;a7c98b17-934a-4366-a52d-7b62c6c90e2f&quot;,#2018-08-25 11:54:53.020#)</value>
            <value>(&quot;a842b0ca-5c2b-445d-b735-136b97e5406f&quot;,#2018-08-25 11:54:59.512#)</value>
            <value>(&quot;abc6fa36-23b9-4121-b302-baf0670183df&quot;,#2018-08-25 11:38:49.742#)</value>
            <value>(&quot;adaf1190-cb28-4072-82ec-2a31119ee91c&quot;,#2018-08-25 11:55:10.592#)</value>
            <value>(&quot;aeb22341-0ad0-474b-a880-0ed9ae11bca0&quot;,#2018-08-25 11:38:45.730#)</value>
            <value>(&quot;b3a5fbce-d426-4f86-9b53-88efd955e9c2&quot;,#2018-08-25 11:38:44.003#)</value>
            <value>(&quot;bbb22920-1bec-4a8f-bf5c-a44f526b9b25&quot;,#2018-08-25 11:38:40.737#)</value>
            <value>(&quot;be3425e5-dd06-48b2-bb78-492de4b67caf&quot;,#2018-08-25 11:38:48.533#)</value>
            <value>(&quot;c0187f73-eedf-4995-ad4e-d1baa64e4a4a&quot;,#2018-08-25 11:52:40.006#)</value>
            <value>(&quot;c54834f6-27d3-4ece-b02f-72c1935a7167&quot;,#2018-08-25 11:44:34.086#)</value>
            <value>(&quot;c56462fc-bc77-49ba-8151-daac51f1ed81&quot;,#2018-08-25 11:44:45.896#)</value>
            <value>(&quot;c80c9f27-fbb4-4969-a6ca-65f6532ca6fd&quot;,#2018-08-25 11:49:25.681#)</value>
            <value>(&quot;c85b7df6-e73a-415e-a81a-74881908d972&quot;,#2018-08-25 11:52:28.150#)</value>
            <value>(&quot;c8817be2-b809-414a-99f4-909c88e2574e&quot;,#2018-08-25 11:45:57.781#)</value>
            <value>(&quot;cc5cfbbb-2e34-4d9b-b22f-4d1931b03ad1&quot;,#2018-08-25 11:49:25.510#)</value>
            <value>(&quot;cced2cd3-3d08-4025-88da-ed1882c6b4a7&quot;,#2018-08-25 11:45:57.685#)</value>
            <value>(&quot;cffc6a33-5ab9-4f07-adc9-2dfd83901d00&quot;,#2018-08-25 11:52:37.364#)</value>
            <value>(&quot;d171c7cf-0269-42fd-964e-11d56d62dfb7&quot;,#2018-08-25 11:38:51.122#)</value>
            <value>(&quot;d1a19616-6aea-43c0-9ed7-819f06326793&quot;,#2018-08-25 11:38:51.030#)</value>
            <value>(&quot;d1b8e4bb-62e6-43f9-af96-cab7e7604176&quot;,#2018-08-25 11:52:41.492#)</value>
            <value>(&quot;d37eea01-0a48-439c-b63d-d56cfe2fe3fa&quot;,#2018-08-25 11:52:39.986#)</value>
            <value>(&quot;d4849b88-36b2-469b-a1aa-ca165ce57fdb&quot;,#2018-08-25 11:44:50.992#)</value>
            <value>(&quot;d4b4ed17-1ca0-4809-930f-1f7b47ec9947&quot;,#2018-08-25 11:38:44.068#)</value>
            <value>(&quot;d4e3c9c3-2a8f-445b-924e-25ea8a57d754&quot;,#2018-08-25 11:38:40.735#)</value>
            <value>(&quot;d62363ce-c0e9-4eb2-9507-6fca7a76f99e&quot;,#2018-08-25 11:54:12.196#)</value>
            <value>(&quot;d894532f-436b-423b-b2b1-57093341df9a&quot;,#2018-08-25 11:55:01.629#)</value>
            <value>(&quot;dd0dc7e8-d16e-48f3-9b0d-e367f823bfc8&quot;,#2018-08-25 11:53:56.283#)</value>
            <value>(&quot;de8b4504-645e-4a46-beea-31272c06fc90&quot;,#2018-08-25 11:54:41.617#)</value>
            <value>(&quot;df57ac6c-ac32-4459-a131-37b82095590f&quot;,#2018-08-25 11:38:47.117#)</value>
            <value>(&quot;e0869649-6f91-4018-8fb4-74b6e00acbb7&quot;,#2018-08-25 11:52:37.340#)</value>
            <value>(&quot;e2405c7f-4718-4e3b-8986-2adba0d72602&quot;,#2018-08-25 11:55:12.524#)</value>
            <value>(&quot;e26894ad-b2ec-4621-9bad-553b63ff942b&quot;,#2018-08-25 11:38:48.493#)</value>
            <value>(&quot;e2dedc76-c97c-49a3-a103-85f113e479d2&quot;,#2018-08-25 11:52:40.006#)</value>
            <value>(&quot;e6441b33-2cc3-4a88-990f-82b5de16e22d&quot;,#2018-08-25 11:49:04.529#)</value>
            <value>(&quot;e786d8d4-7ae5-47aa-8c37-c99b93993243&quot;,#2018-08-25 11:38:45.718#)</value>
            <value>(&quot;ea0f99ab-19df-4c7c-9cc5-6c36b8f5230b&quot;,#2018-08-25 11:49:07.335#)</value>
            <value>(&quot;eaf99174-b72c-4766-9a61-a6073679fe9f&quot;,#2018-08-25 11:49:08.068#)</value>
            <value>(&quot;eb960b95-5269-42bf-93e1-fb61ddeb216d&quot;,#2018-08-25 11:52:37.349#)</value>
            <value>(&quot;ec6e356a-9817-49e4-a6dd-23afa567b6e6&quot;,#2018-08-25 11:52:42.687#)</value>
            <value>(&quot;ee63ec63-6db0-46e5-8f1f-4815640ea34a&quot;,#2018-08-25 11:38:51.027#)</value>
            <value>(&quot;f3acacc9-fede-485e-9998-73ee69d117b5&quot;,#2018-08-25 11:52:37.363#)</value>
            <value>(&quot;f5722825-3afe-41f3-ae7a-72ad5a53afba&quot;,#2018-08-25 11:52:34.497#)</value>
            <value>(&quot;f62e5589-3814-44d7-9d95-2ca77edbf994&quot;,#2018-08-25 11:43:08.958#)</value>
            <value>(&quot;fa2bc940-eaf6-4867-9769-b4b69c265fa4&quot;,#2018-08-25 11:52:35.974#)</value>
            <value>(&quot;fe7c9ee9-20ab-4a29-87fa-1c2dc6a7d8cb&quot;,#2018-08-25 11:52:42.702#)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>(&quot;22eb86e3-53c1-48dc-8e0b-83210d1a2e7d&quot;,#2018-08-25 11:44:52.456#)</value>
            <value>(&quot;245edbd8-8b31-47db-b80f-b59f20e6d30b&quot;,#2018-08-25 11:54:55.039#)</value>
            <value>(&quot;3a7ae957-4e4b-4b8d-878b-229ad53dc04b&quot;,#2018-08-25 11:44:52.462#)</value>
            <value>(&quot;7775314a-1509-42ef-8cd6-3b6d2a5c3e19&quot;,#2018-08-25 11:54:55.048#)</value>
            <value>(&quot;8bfb548b-fa1c-4780-9394-efad21725b5e&quot;,#2018-08-25 11:43:01.176#)</value>
            <value>(&quot;9069c99d-3ff4-4bd1-8409-ee6dc986dea7&quot;,#2018-08-25 11:54:55.019#)</value>
            <value>(&quot;90ad15e1-3e09-4a0c-9b32-e0278ae79687&quot;,#2018-08-25 11:54:55.007#)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 4&quot;'>
            <value>(&quot;0018f474-7b3a-4645-a27f-548a89b47b68&quot;,#2018-08-25 11:46:21.022#)</value>
            <value>(&quot;02238c4e-22ab-4f08-8873-0f0b1e70d835&quot;,#2018-08-25 11:54:02.254#)</value>
            <value>(&quot;03ffd48d-b988-4931-98d6-3de5007de284&quot;,#2018-08-25 11:44:56.789#)</value>
            <value>(&quot;051a9520-f628-4602-ae12-459ab68a5842&quot;,#2018-08-25 11:54:02.258#)</value>
            <value>(&quot;0c9f923d-e15b-4efe-956c-3bbb448e5eae&quot;,#2018-08-25 11:46:08.466#)</value>
            <value>(&quot;1686849d-8f68-4576-96db-c4fd9ec18449&quot;,#2018-08-25 11:44:56.767#)</value>
            <value>(&quot;1696d2db-4bd9-40c7-81e1-51d3474dde52&quot;,#2018-08-25 11:46:18.614#)</value>
            <value>(&quot;2a1b5a72-0c30-4bfc-96a1-b6cf48e65ac8&quot;,#2018-08-25 11:46:16.109#)</value>
            <value>(&quot;2b4c7cc4-bf85-4f97-a90d-d00c177e5f32&quot;,#2018-08-25 11:53:57.826#)</value>
            <value>(&quot;3b5df4c0-e621-4225-8cc1-a3efb29f6235&quot;,#2018-08-25 11:45:07.784#)</value>
            <value>(&quot;3fdfa745-4d63-497a-a302-990b2d34223d&quot;,#2018-08-25 11:45:07.785#)</value>
            <value>(&quot;41decb25-1425-4875-849d-1a72d4985092&quot;,#2018-08-25 11:44:56.767#)</value>
            <value>(&quot;45d9da67-cb02-4224-8766-ddebd8b892be&quot;,#2018-08-25 11:46:05.840#)</value>
            <value>(&quot;46366d4f-8215-4527-aa3b-9bddc420738e&quot;,#2018-08-25 11:44:56.767#)</value>
            <value>(&quot;4a1bfc19-0ff7-4011-b969-6e67811810d3&quot;,#2018-08-25 11:46:10.832#)</value>
            <value>(&quot;515de8fa-2c8e-4314-80ab-a8d56b548445&quot;,#2018-08-25 11:44:59.763#)</value>
            <value>(&quot;54b2b7e1-1f52-497e-9519-f6153d3d5c91&quot;,#2018-08-25 11:46:08.469#)</value>
            <value>(&quot;55aec13f-0bd4-4cdd-b60c-15fd99a91e00&quot;,#2018-08-25 11:45:12.114#)</value>
            <value>(&quot;5f0189d8-0d66-4c40-9313-2212fb46d3ce&quot;,#2018-08-25 11:46:10.835#)</value>
            <value>(&quot;63913bb0-e597-47ae-af01-e91b871707bf&quot;,#2018-08-25 11:46:16.109#)</value>
            <value>(&quot;64fcf241-f34b-455c-839b-266770e6a045&quot;,#2018-08-25 11:46:18.594#)</value>
            <value>(&quot;6578ad11-acc7-4b86-ba1b-0f5e82d75d52&quot;,#2018-08-25 11:46:05.850#)</value>
            <value>(&quot;77475048-1a84-4bd9-aca2-30115ceeddb6&quot;,#2018-08-25 11:46:05.835#)</value>
            <value>(&quot;84e60a6c-2e3f-4cc1-9da3-d3cd91660f2d&quot;,#2018-08-25 11:46:16.097#)</value>
            <value>(&quot;8b673bfe-2c49-4add-bfdb-d17760370765&quot;,#2018-08-25 11:46:10.817#)</value>
            <value>(&quot;8d9b09fa-0fcd-4911-a395-4572283f2870&quot;,#2018-08-25 11:46:16.109#)</value>
            <value>(&quot;94306359-52ea-4f44-a2b6-b9b20a94c0ba&quot;,#2018-08-25 11:46:05.850#)</value>
            <value>(&quot;98aa7a64-83d4-4df0-baf1-a573f0802783&quot;,#2018-08-25 11:46:21.014#)</value>
            <value>(&quot;9930cc1a-b345-462a-ba47-cce359460ee4&quot;,#2018-08-25 11:38:30.275#)</value>
            <value>(&quot;9a991c5b-bc58-4119-a5ed-7e913d6b5662&quot;,#2018-08-25 11:46:10.807#)</value>
            <value>(&quot;9ddbf12f-50ce-43ac-a68c-c4ff4a709f73&quot;,#2018-08-25 11:53:57.872#)</value>
            <value>(&quot;a417e305-bb6f-4b6d-80c8-1b355d7c8c95&quot;,#2018-08-25 11:46:13.399#)</value>
            <value>(&quot;a8aa8f43-0ea4-4414-8437-966503cb4d62&quot;,#2018-08-25 11:46:10.817#)</value>
            <value>(&quot;af6bd1e7-2949-4ad3-8853-7cf2b6f27a72&quot;,#2018-08-25 11:45:12.114#)</value>
            <value>(&quot;b6fec461-bca3-487a-b953-86f0393342d7&quot;,#2018-08-25 11:44:59.763#)</value>
            <value>(&quot;ba95ef3d-74a0-4a6a-9eb7-9edf9a244446&quot;,#2018-08-25 11:46:08.474#)</value>
            <value>(&quot;baf831d1-499c-41ca-9fdb-2ca03b8fa4d2&quot;,#2018-08-25 11:52:25.031#)</value>
            <value>(&quot;be2d196b-757b-487d-9cea-0334ca6e85e9&quot;,#2018-08-25 11:46:21.024#)</value>
            <value>(&quot;c176aa3c-e3e0-41e0-8d0a-772ddf160e0b&quot;,#2018-08-25 11:46:05.843#)</value>
            <value>(&quot;c6029dab-c485-4c9d-94af-7cf52ebb5ab8&quot;,#2018-08-25 11:54:02.255#)</value>
            <value>(&quot;dadd37e4-545d-45d5-b0d8-f216224e2f94&quot;,#2018-08-25 11:46:21.019#)</value>
            <value>(&quot;e573a118-19a0-478d-af69-91c3fc1167a4&quot;,#2018-08-25 11:46:02.588#)</value>
            <value>(&quot;ec413f91-6903-4ca6-bb7d-9214dc96390f&quot;,#2018-08-25 11:46:08.479#)</value>
            <value>(&quot;f3223e6a-10a2-4f3c-a8b8-2f7b755ec285&quot;,#2018-08-25 11:46:18.599#)</value>
            <value>(&quot;f4071ce3-b364-4e7b-8afe-15bac09289b1&quot;,#2018-08-25 11:46:18.611#)</value>
            <value>(&quot;f43dc434-4618-42b0-9b11-740876490f1d&quot;,#2018-08-25 11:46:02.609#)</value>
            <value>(&quot;f9f25d23-c56c-447b-a35e-c751868f2848&quot;,#2018-08-25 11:46:08.472#)</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 5&quot;'>
            <value>(&quot;08e611c2-f7ba-4b23-8fce-b021c86f86a9&quot;,#2018-08-25 11:45:59.556#)</value>
            <value>(&quot;24588cf7-cbeb-4cc2-8e83-83bb4b9a69b6&quot;,#2018-08-25 11:44:52.464#)</value>
            <value>(&quot;24b19e1c-37ce-4f2d-b5ec-0852bac3568f&quot;,#2018-08-25 11:54:55.060#)</value>
            <value>(&quot;2ae3a66e-97e7-41e7-90f3-7a493e1dd62f&quot;,#2018-08-25 11:46:02.679#)</value>
            <value>(&quot;49e8522a-c394-4e95-9e56-5bc21dc492fd&quot;,#2018-08-25 11:45:59.558#)</value>
            <value>(&quot;5187422d-942a-4ae5-9c9f-5819eb19132c&quot;,#2018-08-25 11:43:01.597#)</value>
            <value>(&quot;63e2c2c1-29b3-4cc3-bcf8-97372720edc1&quot;,#2018-08-25 11:45:59.556#)</value>
            <value>(&quot;661eb29f-3f1f-49c3-8311-8f36bd7b3c23&quot;,#2018-08-25 11:46:02.592#)</value>
            <value>(&quot;6d193fed-a94e-4cc7-a698-cdfa4ae6f0cf&quot;,#2018-08-25 11:44:52.471#)</value>
            <value>(&quot;74519455-59b8-4529-a40c-3ad7de2873f7&quot;,#2018-08-25 11:46:13.392#)</value>
            <value>(&quot;8e4aa7c3-8b74-43c7-a194-5e11a45e9be8&quot;,#2018-08-25 11:43:01.321#)</value>
            <value>(&quot;921f03fa-381c-4aaa-b3c1-87cfbada0360&quot;,#2018-08-25 11:46:13.399#)</value>
            <value>(&quot;9e52279f-665b-40c5-a954-4a68764c1a84&quot;,#2018-08-25 11:46:02.592#)</value>
            <value>(&quot;bfa9b518-fb56-4656-983a-b02b2f3c768d&quot;,#2018-08-25 11:45:59.543#)</value>
            <value>(&quot;c9214e7d-eb01-4ed0-a53a-e391a5ebcbe7&quot;,#2018-08-25 11:46:13.392#)</value>
            <value>(&quot;e69a78d8-f947-4316-9fe8-3d4eed21b2a3&quot;,#2018-08-25 11:44:52.464#)</value>
            <value>(&quot;f56df9c7-30ce-4ab6-af64-791b63abd94d&quot;,#2018-08-25 11:45:59.536#)</value>
            <value>(&quot;f60053bc-aacc-4c5f-9416-af65b189d63f&quot;,#2018-08-25 11:43:01.472#)</value>
          </bin>
        </calculation>
      </column>
      <column caption='Role Name' datatype='string' name='[ROLE_NAME]' role='dimension' type='nominal' />
      <column caption='Schema Name' datatype='string' name='[SCHEMA_NAME]' role='dimension' type='nominal' />
      <column caption='Session Id' datatype='integer' name='[SESSION_ID]' role='dimension' type='ordinal' />
      <column caption='Start Time' datatype='datetime' name='[START_TIME]' role='dimension' type='quantitative' />
      <column caption='Total Elapsed Time' datatype='integer' name='[TOTAL_ELAPSED_TIME]' role='measure' type='quantitative' />
      <column caption='Transaction Blocked Time' datatype='integer' name='[TRANSACTION_BLOCKED_TIME]' role='measure' type='quantitative' />
      <column caption='User Name' datatype='string' name='[USER_NAME]' role='dimension' type='nominal' />
      <column caption='Warehouse Name' datatype='string' name='[WAREHOUSE_NAME]' role='dimension' type='nominal' />
      <column caption='Warehouse Size' datatype='string' name='[WAREHOUSE_SIZE]' role='dimension' type='nominal' />
      <column caption='Warehouse Type' datatype='string' name='[WAREHOUSE_TYPE]' role='dimension' type='nominal' />
      <column-instance column='[COMPILATION_TIME]' derivation='Avg' name='[avg:COMPILATION_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EXECUTION_TIME]' derivation='Avg' name='[avg:EXECUTION_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUEUED_OVERLOAD_TIME]' derivation='Avg' name='[avg:QUEUED_OVERLOAD_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUEUED_PROVISIONING_TIME]' derivation='Avg' name='[avg:QUEUED_PROVISIONING_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUEUED_REPAIR_TIME]' derivation='Avg' name='[avg:QUEUED_REPAIR_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TRANSACTION_BLOCKED_TIME]' derivation='Avg' name='[avg:TRANSACTION_BLOCKED_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUERY_ID]' derivation='CountD' name='[ctd:QUERY_ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUERY_ID]' derivation='None' name='[none:QUERY_ID:nk]' pivot='key' type='nominal' />
      <column-instance column='[QUERY_TEXT - Split 1]' derivation='None' name='[none:QUERY_TEXT - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[START_TIME]' derivation='None' name='[none:START_TIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[START_TIME]' derivation='None' name='[none:START_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COMPILATION_TIME]' derivation='Sum' name='[sum:COMPILATION_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EXECUTION_TIME]' derivation='Sum' name='[sum:EXECUTION_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OUTBOUND_DATA_TRANSFER_BYTES]' derivation='Sum' name='[sum:OUTBOUND_DATA_TRANSFER_BYTES:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUEUED_OVERLOAD_TIME]' derivation='Sum' name='[sum:QUEUED_OVERLOAD_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUEUED_PROVISIONING_TIME]' derivation='Sum' name='[sum:QUEUED_PROVISIONING_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QUEUED_REPAIR_TIME]' derivation='Sum' name='[sum:QUEUED_REPAIR_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TOTAL_ELAPSED_TIME]' derivation='Sum' name='[sum:TOTAL_ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TRANSACTION_BLOCKED_TIME]' derivation='Sum' name='[sum:TRANSACTION_BLOCKED_TIME:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Query Id,Query Text - Split 1,Start Time)' hidden='true' name='[Action (Query Id,Query Text - Split 1,Start Time)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[QUERY_ID]' />
          <groupfilter function='level-members' level='[QUERY_TEXT - Split 1]' />
          <groupfilter function='level-members' level='[START_TIME]' />
        </groupfilter>
      </group>
      <group caption='Action (Query Text - Split 1,Warehouse Name,Warehouse Size)' hidden='true' name='[Action (Query Text - Split 1,Warehouse Name,Warehouse Size)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[QUERY_TEXT - Split 1]' />
          <groupfilter function='level-members' level='[WAREHOUSE_NAME]' />
          <groupfilter function='level-members' level='[WAREHOUSE_SIZE]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Query Id,Query Text - Split 1,Start Time)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:QUERY_ID:nk]' />
          <groupfilter function='level-members' level='[none:QUERY_TEXT - Split 1:nk]' />
          <groupfilter function='level-members' level='[none:START_TIME:qk]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' hidden='true' name='[Query Id &amp; Start Time]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:QUERY_ID:nk]' />
          <groupfilter function='level-members' level='[none:START_TIME:ok]' />
        </groupfilter>
      </group>
      <group delimiter=' - ' name='[Warehouse Size &amp; Warehouse Name (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[WAREHOUSE_NAME]' />
          <groupfilter function='level-members' level='[WAREHOUSE_SIZE]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.602853' measure-ordering='alphabetic' measure-percentage='0.397147' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:QUERY_TEXT - Split 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  (1 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;wd:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;GENDER\&quot; AS \&quot;GENDER\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  DATEADD(&apos;DAY&apos;,-((7 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) - 1) \% 7),DATE_TRUNC(&apos;DAY&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;twk:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1,&#10;  3&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;START_STATION_LATITUDE\&quot; AS \&quot;START_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_LONGITUDE\&quot; AS \&quot;START_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_NAME\&quot; AS \&quot;START_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;START_STATION_NAME\&quot; AS \&quot;START_STATION_NAME\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1&#10;LIMIT 76&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;START_STATION_LATITUDE\&quot; AS \&quot;START_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_LONGITUDE\&quot; AS \&quot;START_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_NAME\&quot; AS \&quot;START_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1,&#10;  2,&#10;  3&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;GENDER\&quot; AS \&quot;GENDER\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  DATEADD(&apos;DAY&apos;,-((7 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) - 1) \% 7),DATE_TRUNC(&apos;DAY&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;twk:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  (1 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;wd:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;END_STATION_LATITUDE\&quot; AS \&quot;END_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_LONGITUDE\&quot; AS \&quot;END_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_NAME\&quot; AS \&quot;END_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  DATEADD(&apos;DAY&apos;,-((7 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) - 1) \% 7),DATE_TRUNC(&apos;DAY&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;twk:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  DATEADD(&apos;DAY&apos;,-((7 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) - 1) \% 7),DATE_TRUNC(&apos;DAY&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;twk:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SELECT DATE_PART(&apos;HOUR&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) AS \&quot;hr:STARTTIME:ok\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;END_STATION_LATITUDE\&quot; AS \&quot;END_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_LONGITUDE\&quot; AS \&quot;END_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_NAME\&quot; AS \&quot;END_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1,&#10;  2,&#10;  3&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;HAVING (COUNT(1) &gt; 0)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SELECT DATE_PART(&apos;HOUR&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) AS \&quot;hr:STARTTIME:ok\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:COMPILATION_TIME:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:COMPILATION_TIME:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_OVERLOAD_TIME:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:QUEUED_OVERLOAD_TIME:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:OUTBOUND_DATA_TRANSFER_BYTES:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:TRANSACTION_BLOCKED_TIME:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TRANSACTION_BLOCKED_TIME:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_REPAIR_TIME:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:QUEUED_REPAIR_TIME:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_PROVISIONING_TIME:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:QUEUED_PROVISIONING_TIME:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:EXECUTION_TIME:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:EXECUTION_TIME:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[ctd:QUERY_ID:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[Query Id &amp; Start Time (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Cluster 4&quot;</bucket>
            <bucket>&quot;Cluster 5&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{3beba015-c99f-43b9-aff6-53acf02b63a1}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_ID:nk]' />
            <field name='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:START_TIME:ok]' />
          </lod-fields>
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
    </datasource>
    <datasource caption='Trips Data' inline='true' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='au_demo2.ap-southeast-2.snowflakecomputing.com' name='snowflake.1chx8gq147sho216iyv4o1ipur67'>
            <connection authentication='Username Password' class='snowflake' dbname='CITIBIKE' odbc-connect-string-extras='' one-time-sql='alter session set client_session_keep_alive=true;&#10;alter session set query_tag=&apos;QueryFromTableau&apos;;' schema='MODELLED' server='au_demo2.ap-southeast-2.snowflakecomputing.com' service='' username='john' warehouse='DEMO_WH'>
              <connection-customization class='snowflake' enabled='false' version='18.1'>
                <vendor name='snowflake' />
                <driver name='snowflake' />
                <customizations>
                  <customization name='CAP_FAST_METADATA' value='no' />
                </customizations>
              </connection-customization>
            </connection>
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[TRIPS].[PROGRAM_ID]' />
              <expression op='[PROGRAMS].[PROGRAM_ID]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[TRIPS].[END_STATION_ID]' />
                <expression op='[END STATIONS].[STATION_ID]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[TRIPS].[START_STATION_ID]' />
                  <expression op='[START STATIONS].[STATION_ID]' />
                </expression>
              </clause>
              <relation connection='snowflake.1chx8gq147sho216iyv4o1ipur67' name='TRIPS' table='[MODELLED].[TRIPS]' type='table' />
              <relation connection='snowflake.1chx8gq147sho216iyv4o1ipur67' name='START STATIONS' table='[MODELLED].[STATIONS]' type='table' />
            </relation>
            <relation connection='snowflake.1chx8gq147sho216iyv4o1ipur67' name='END STATIONS' table='[MODELLED].[STATIONS]' type='table' />
          </relation>
          <relation connection='snowflake.1chx8gq147sho216iyv4o1ipur67' name='PROGRAMS' table='[MODELLED].[PROGRAMS]' type='table' />
        </relation>
        <cols>
          <map key='[BIKEID]' value='[TRIPS].[BIKEID]' />
          <map key='[BIRTH_YEAR]' value='[TRIPS].[BIRTH_YEAR]' />
          <map key='[END_STATION_ID]' value='[TRIPS].[END_STATION_ID]' />
          <map key='[GENDER]' value='[TRIPS].[GENDER]' />
          <map key='[PROGRAM_ID (PROGRAMS)]' value='[PROGRAMS].[PROGRAM_ID]' />
          <map key='[PROGRAM_ID]' value='[TRIPS].[PROGRAM_ID]' />
          <map key='[PROGRAM_NAME]' value='[PROGRAMS].[PROGRAM_NAME]' />
          <map key='[STARTTIME]' value='[TRIPS].[STARTTIME]' />
          <map key='[START_STATION_ID]' value='[TRIPS].[START_STATION_ID]' />
          <map key='[STATION_COMMENT (STATIONS)]' value='[END STATIONS].[STATION_COMMENT]' />
          <map key='[STATION_COMMENT]' value='[START STATIONS].[STATION_COMMENT]' />
          <map key='[STATION_ID (STATIONS)]' value='[END STATIONS].[STATION_ID]' />
          <map key='[STATION_ID]' value='[START STATIONS].[STATION_ID]' />
          <map key='[STATION_LATITUDE (STATIONS)]' value='[END STATIONS].[STATION_LATITUDE]' />
          <map key='[STATION_LATITUDE]' value='[START STATIONS].[STATION_LATITUDE]' />
          <map key='[STATION_LONGITUDE (STATIONS)]' value='[END STATIONS].[STATION_LONGITUDE]' />
          <map key='[STATION_LONGITUDE]' value='[START STATIONS].[STATION_LONGITUDE]' />
          <map key='[STATION_NAME (STATIONS)]' value='[END STATIONS].[STATION_NAME]' />
          <map key='[STATION_NAME]' value='[START STATIONS].[STATION_NAME]' />
          <map key='[STOPTIME]' value='[TRIPS].[STOPTIME]' />
          <map key='[TRIPDURATION]' value='[TRIPS].[TRIPDURATION]' />
          <map key='[USERTYPE]' value='[TRIPS].[USERTYPE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>TRIPDURATION</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TRIPDURATION]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>TRIPDURATION</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARTTIME</remote-name>
            <remote-type>7</remote-type>
            <local-name>[STARTTIME]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>STARTTIME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STOPTIME</remote-name>
            <remote-type>7</remote-type>
            <local-name>[STOPTIME]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>STOPTIME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>START_STATION_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[START_STATION_ID]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>START_STATION_ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>END_STATION_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[END_STATION_ID]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>END_STATION_ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BIKEID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BIKEID]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>BIKEID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USERTYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[USERTYPE]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>USERTYPE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BIRTH_YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BIRTH_YEAR]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>BIRTH_YEAR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GENDER</remote-name>
            <remote-type>131</remote-type>
            <local-name>[GENDER]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>GENDER</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROGRAM_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROGRAM_ID]</local-name>
            <parent-name>[TRIPS]</parent-name>
            <remote-alias>PROGRAM_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STATION_ID]</local-name>
            <parent-name>[START STATIONS]</parent-name>
            <remote-alias>STATION_ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION_NAME]</local-name>
            <parent-name>[START STATIONS]</parent-name>
            <remote-alias>STATION_NAME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STATION_LATITUDE]</local-name>
            <parent-name>[START STATIONS]</parent-name>
            <remote-alias>STATION_LATITUDE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STATION_LONGITUDE]</local-name>
            <parent-name>[START STATIONS]</parent-name>
            <remote-alias>STATION_LONGITUDE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_COMMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION_COMMENT]</local-name>
            <parent-name>[START STATIONS]</parent-name>
            <remote-alias>STATION_COMMENT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STATION_ID (STATIONS)]</local-name>
            <parent-name>[END STATIONS]</parent-name>
            <remote-alias>STATION_ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION_NAME (STATIONS)]</local-name>
            <parent-name>[END STATIONS]</parent-name>
            <remote-alias>STATION_NAME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STATION_LATITUDE (STATIONS)]</local-name>
            <parent-name>[END STATIONS]</parent-name>
            <remote-alias>STATION_LATITUDE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[STATION_LONGITUDE (STATIONS)]</local-name>
            <parent-name>[END STATIONS]</parent-name>
            <remote-alias>STATION_LONGITUDE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_COMMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION_COMMENT (STATIONS)]</local-name>
            <parent-name>[END STATIONS]</parent-name>
            <remote-alias>STATION_COMMENT</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROGRAM_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PROGRAM_ID (PROGRAMS)]</local-name>
            <parent-name>[PROGRAMS]</parent-name>
            <remote-alias>PROGRAM_ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROGRAM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROGRAM_NAME]</local-name>
            <parent-name>[PROGRAMS]</parent-name>
            <remote-alias>PROGRAM_NAME</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16777216</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Weekend?' datatype='integer' name='[Calculation_3018467318149013504]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Set 2] then 1 else -1 end' />
      </column>
      <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
      </column>
      <column caption='Tripdistance' datatype='real' name='[Calculation_3482197313670479872]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RAWSQL_REAL(&quot;haversine(start_station_latitude, start_station_longitude, end_station_latitude, end_station_longitude)&quot;)' />
      </column>
      <column caption='Odd/Even Year' datatype='boolean' name='[Calculation_67765169062858752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='YEAR([STARTTIME]) % 2 = 1' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Program Id (Programs)' datatype='integer' name='[PROGRAM_ID (PROGRAMS)]' role='dimension' type='ordinal' />
      <column caption='Program Name' datatype='string' name='[PROGRAM_NAME]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
      <column caption='Station Comment (Stations)' datatype='string' name='[STATION_COMMENT (STATIONS)]' role='dimension' type='nominal' />
      <column caption='Station Comment' datatype='string' name='[STATION_COMMENT]' role='dimension' type='nominal' />
      <column caption='Station Id (Stations)' datatype='integer' name='[STATION_ID (STATIONS)]' role='dimension' type='ordinal' />
      <column caption='Station Id' datatype='integer' name='[STATION_ID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
      <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
      <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATION_LATITUDE (STATIONS)]' derivation='None' name='[none:STATION_LATITUDE (STATIONS):qk]' pivot='key' type='quantitative' />
      <column-instance column='[STATION_LATITUDE]' derivation='None' name='[none:STATION_LATITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STATION_LONGITUDE (STATIONS)]' derivation='None' name='[none:STATION_LONGITUDE (STATIONS):qk]' pivot='key' type='quantitative' />
      <column-instance column='[STATION_LONGITUDE]' derivation='None' name='[none:STATION_LONGITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
      <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[STARTTIME]' derivation='Year' name='[yr:STARTTIME:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Distance)' hidden='true' name='[Action (Distance)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_3018467318151557121]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Latitude,End Station Longitude)' hidden='true' name='[Action (End Station Latitude,End Station Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:END_STATION_LATITUDE:ok]' />
          <groupfilter function='level-members' level='[none:END_STATION_LONGITUDE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Latitude,End Station Longitude,End Station Name)' hidden='true' name='[Action (End Station Latitude,End Station Longitude,End Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:END_STATION_LATITUDE:ok]' />
          <groupfilter function='level-members' level='[none:END_STATION_LONGITUDE:ok]' />
          <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' />
        </groupfilter>
      </group>
      <group caption='Action (End Station Name)' hidden='true' name='[Action (End Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' />
        </groupfilter>
      </group>
      <group caption='Action (HOUR(Starttime))' hidden='true' name='[Action (HOUR(Starttime))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:STARTTIME:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Latitude,Start Station Longitude)' hidden='true' name='[Action (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:START_STATION_LATITUDE:ok]' />
          <groupfilter function='level-members' level='[none:START_STATION_LONGITUDE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Latitude,Start Station Longitude,Start Station Name)' hidden='true' name='[Action (Start Station Latitude,Start Station Longitude,Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:START_STATION_LATITUDE:ok]' />
          <groupfilter function='level-members' level='[none:START_STATION_LONGITUDE:ok]' />
          <groupfilter function='level-members' level='[none:STATION_NAME:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Start Station Name)' hidden='true' name='[Action (Start Station Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_NAME:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEK(Starttime))' hidden='true' name='[Action (WEEK(Starttime))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[twk:STARTTIME:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (WEEKDAY(Starttime))' hidden='true' name='[Action (WEEKDAY(Starttime))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[wd:STARTTIME:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (End Station Latitude,End Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_LATITUDE (STATIONS):qk]' />
          <groupfilter function='level-members' level='[none:STATION_LONGITUDE (STATIONS):qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (End Station Latitude,End Station Longitude,End Station Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_LATITUDE (STATIONS):qk]' />
          <groupfilter function='level-members' level='[none:STATION_LONGITUDE (STATIONS):qk]' />
          <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_LATITUDE:qk]' />
          <groupfilter function='level-members' level='[none:STATION_LONGITUDE:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Start Station Latitude,Start Station Longitude,Start Station Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_LATITUDE:qk]' />
          <groupfilter function='level-members' level='[none:STATION_LONGITUDE:qk]' />
          <groupfilter function='level-members' level='[none:STATION_NAME:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (End Station Latitude,End Station Longitude)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_LATITUDE (STATIONS):qk]' />
          <groupfilter function='level-members' level='[none:STATION_LONGITUDE (STATIONS):qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:STATION_LATITUDE:qk]' />
          <groupfilter function='level-members' level='[none:STATION_LONGITUDE:qk]' />
        </groupfilter>
      </group>
      <group caption='Commute' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='union'>
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='7' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='8' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='9' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='16' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='17' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='18' />
          </groupfilter>
          <groupfilter function='union'>
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='16' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='17' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='18' />
            <groupfilter function='member' level='[hr:STARTTIME:ok]' member='19' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Weekend' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[wd:STARTTIME:ok]' member='1' />
          <groupfilter function='member' level='[wd:STARTTIME:ok]' member='7' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City' />
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.566284' group-percentage='0.0429119' measure-ordering='alphabetic' measure-percentage='0.390805' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:STARTTIME:ok]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>2018</bucket>
            </map>
            <map to='#32759a'>
              <bucket>2017</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>2016</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>2015</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>2014</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>2013</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#43719f'>
              <bucket>&quot;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[avg:TEMP_AVG_C:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 2:nk]' type='palette'>
            <map to='#43719f'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Citibike Data' type='sheet' worksheet='Pickup Location' />
      <link caption='Filter 1 (generated)' delimiter=',' escape='\' expression='tsl:Citibike%20Data?%5Bfederated.1s8jcl817pmgaw1ec9c5b047iumw%5D.%5BSTATION_NAME%5D~s0=&lt;[STATION_NAME]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Citibike Data' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Citibike Data' type='sheet' worksheet='Dropoff Location' />
      <link caption='Filter 2 (generated)' delimiter=',' escape='\' expression='tsl:Citibike%20Data?%5Bfederated.1s8jcl817pmgaw1ec9c5b047iumw%5D.%5BSTATION_NAME%20%28STATIONS%29%5D~s0=&lt;[STATION_NAME (STATIONS)]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Citibike Data' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Citibike Data' type='sheet' worksheet='By Day' />
      <link caption='Filter 3 (generated)' delimiter=',' escape='\' expression='tsl:Citibike%20Data?%5Bfederated.1s8jcl817pmgaw1ec9c5b047iumw%5D.%5Btwk%3ASTARTTIME%3Aok%5D~s0=&lt;[twk:STARTTIME:ok]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Citibike Data' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Citibike Data' type='sheet' worksheet='By Day of Week' />
      <link caption='Filter 4 (generated)' delimiter=',' escape='\' expression='tsl:Citibike%20Data?%5Bfederated.1s8jcl817pmgaw1ec9c5b047iumw%5D.%5Bwd%3ASTARTTIME%3Aok%5D~s0=&lt;WEEKDAY([STARTTIME])~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Citibike Data' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Citibike Data' type='sheet' worksheet='By Hour of Day' />
      <link caption='Filter 5 (generated)' delimiter=',' escape='\' expression='tsl:Citibike%20Data?%5Bfederated.1s8jcl817pmgaw1ec9c5b047iumw%5D.%5Bhr%3ASTARTTIME%3Aok%5D~s0=&lt;HOUR([STARTTIME])~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Citibike Data' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action6]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Query Times' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Query Text - Split 1' />
        <param name='target' value='Query Times' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Citibike Data' type='sheet' worksheet='By Distance' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Citibike Data' />
      </command>
    </action>
    <datasources>
      <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
    </datasources>
    <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
      <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
      <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
      <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
      <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='By Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Day-Trunc' name='[tdy:STARTTIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]'>
            <groupfilter function='level-members' level='[Calculation_3018467318151557121]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]'>
            <groupfilter function='level-members' level='[hr:STARTTIME:ok]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME:nk]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]'>
            <groupfilter function='level-members' level='[wd:STARTTIME:ok]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' scope='rows' value='# trips' />
            <format attr='title' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[tdy:STARTTIME:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[tdy:STARTTIME:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='0.33983424305915833' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]</rows>
        <cols>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[tdy:STARTTIME:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='false' fill-type='fill-missing' ignore-last='1' model-type='custom' range-type='auto' season-type='ets-multiplicative' show-prediction-bands='true' trend-type='ets-additive' />
      </table>
      <simple-id uuid='{744008CE-D044-4160-916B-BEC11B0B8CF0}' />
    </worksheet>
    <worksheet name='By Day of Week'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Set 2]' derivation='InOut' name='[io:Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]'>
            <groupfilter function='level-members' level='[Calculation_3018467318151557121]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]'>
            <groupfilter function='level-members' level='[hr:STARTTIME:ok]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME:nk]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]'>
            <groupfilter function='level-members' level='[twk:STARTTIME:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' scope='rows' value='# trips' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[wd:STARTTIME:ok]' value='ieee' />
            <format attr='text-orientation' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[wd:STARTTIME:ok]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='in-tooltip' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 2:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]</rows>
        <cols>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[wd:STARTTIME:ok]</cols>
      </table>
      <simple-id uuid='{47FB2AD6-6BC5-41AE-9FD6-9874465BD3B9}' />
    </worksheet>
    <worksheet name='By Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_3018467318151557121]' derivation='None' name='[none:Calculation_3018467318151557121:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]'>
            <groupfilter function='level-members' level='[hr:STARTTIME:ok]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME:nk]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]'>
            <groupfilter function='level-members' level='[wd:STARTTIME:ok]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_3018467318151557121:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>10.0</max>
          </filter>
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_3018467318151557121:qk]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_3018467318151557121:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_3018467318151557121:qk]' scope='rows' value='Distance (Km)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[wd:STARTTIME:ok]' value='ieee' />
            <format attr='text-orientation' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[wd:STARTTIME:ok]' value='0' />
            <format attr='text-format' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='0.10000000000000001' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_3018467318151557121:qk]</rows>
        <cols>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{3E454BDB-5644-467E-8355-E6F473DB069C}' />
    </worksheet>
    <worksheet name='By Hour of Day'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]'>
            <groupfilter function='level-members' level='[Calculation_3018467318151557121]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME:nk]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]'>
            <groupfilter function='level-members' level='[twk:STARTTIME:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]'>
            <groupfilter function='level-members' level='[wd:STARTTIME:ok]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[hr:STARTTIME:ok]' value='21' />
            <format attr='title' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' scope='rows' value='# trips' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[hr:STARTTIME:ok]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='in-tooltip' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 1:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#333333' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]</rows>
        <cols>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[hr:STARTTIME:ok]</cols>
      </table>
      <simple-id uuid='{6DCEFED6-5984-44A2-B9B4-4852741CE71A}' />
    </worksheet>
    <worksheet name='Dropoff Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STATION_LATITUDE (STATIONS)]' derivation='None' name='[none:STATION_LATITUDE (STATIONS):qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATION_LONGITUDE (STATIONS)]' derivation='None' name='[none:STATION_LONGITUDE (STATIONS):qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]'>
            <groupfilter function='level-members' level='[Calculation_3018467318151557121]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]'>
            <groupfilter function='level-members' level='[hr:STARTTIME:ok]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME:nk]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]'>
            <groupfilter function='level-members' level='[twk:STARTTIME:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]'>
            <groupfilter function='level-members' level='[wd:STARTTIME:ok]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Exclusions (End Station Latitude,End Station Longitude,End Station Name)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:STATION_LATITUDE (STATIONS):qk]' />
                <groupfilter function='level-members' level='[none:STATION_LONGITUDE (STATIONS):qk]' />
                <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='0.0' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='0.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;333 Johnson TEST 1&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;LPI Facility&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;NYCBS Depot - STY - Valet Scan&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;SSP - Basement&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;WS Don&apos;t Use&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;Washington Street (Don&apos;t Use)&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.445349999999998' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-73.978238000000005' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;E 37 St &amp; Lexington Ave&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.517975200000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-74.031372070000003' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;8D OPS 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.646538366999998' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-74.016587733999998' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;Bressler&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.646606800000001' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-74.015969999999996' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;NYCBS Test&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.646677898999997' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-74.01630342' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;Kiosk in a box Motivate&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.646678000000001' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-74.016262999999995' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;SSP Tech Workshop&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.646768000000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-74.016509999999997' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;NYCBS Depot - SSP&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='40.880920555000003' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-73.896601795999999' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;8D OPS 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='45.505850639000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-73.569109440000005' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;8D Mobile 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='45.506264191' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-73.568905591999993' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;8D Mobile 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE (STATIONS):qk]' member='45.506364054000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE (STATIONS):qk]' member='-73.569463490999993' />
                    <groupfilter function='member' level='[none:STATION_NAME (STATIONS):nk]' member='&quot;8D QC Station 01&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_NAME (STATIONS):nk]' direction='DESC' using='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Exclusions (End Station Latitude,End Station Longitude,End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LATITUDE (STATIONS):qk]' field-type='quantitative' max='4986425.60617154' min='4960223.0213568481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LONGITUDE (STATIONS):qk]' field-type='quantitative' max='-8219020.1877342118' min='-8255551.1700330162' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LONGITUDE (STATIONS):qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LATITUDE (STATIONS):qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='false' />
            <format attr='enabled' id='hillshade_highlight_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_faint' value='false' />
            <format attr='enabled' id='hillshade_shadow_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_dark' value='false' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.25' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
              <lod column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_NAME (STATIONS):nk]' />
              <lod column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_NAME (STATIONS):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]&gt; </run>
                <run fontcolor='#787878'>trips</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='170' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
                <encoding attr='density-color' palette='density_dark_blue' type='interpolated' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LATITUDE (STATIONS):qk]</rows>
        <cols>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LONGITUDE (STATIONS):qk]</cols>
      </table>
      <simple-id uuid='{69A9E461-F6AC-41B5-92A0-BBE78E08F3F4}' />
    </worksheet>
    <worksheet name='Num of Records'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]'>
            <groupfilter function='level-members' level='[Calculation_3018467318151557121]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]'>
            <groupfilter function='level-members' level='[hr:STARTTIME:ok]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME:nk]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]'>
            <groupfilter function='level-members' level='[twk:STARTTIME:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]'>
            <groupfilter function='level-members' level='[wd:STARTTIME:ok]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='14'>&lt;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]&gt;</run>
                <run> trips</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D0E022BD-9428-4C89-BF29-613F0EA3D1FA}' />
    </worksheet>
    <worksheet name='Pickup Location'>
      <table>
        <view>
          <datasources>
            <datasource caption='Trips Data' name='federated.1s8jcl817pmgaw1ec9c5b047iumw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s8jcl817pmgaw1ec9c5b047iumw'>
            <column caption='Distance' datatype='real' name='[Calculation_3018467318151557121]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT(RAWSQL_REAL(&quot;haversine(%1, %2, %3, %4)&quot;, &#10;[STATION_LATITUDE], [STATION_LONGITUDE], [STATION_LATITUDE (STATIONS)], [STATION_LONGITUDE (STATIONS)])&#10;*10)/10' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[STARTTIME]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Station Latitude (Stations)' datatype='real' name='[STATION_LATITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Latitude' datatype='real' name='[STATION_LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude (Stations)' datatype='real' name='[STATION_LONGITUDE (STATIONS)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Station Longitude' datatype='real' name='[STATION_LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Station Name (Stations)' datatype='string' name='[STATION_NAME (STATIONS)]' role='dimension' type='nominal' />
            <column caption='Station Name' datatype='string' name='[STATION_NAME]' role='dimension' type='nominal' />
            <column-instance column='[STARTTIME]' derivation='Hour' name='[hr:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STATION_LATITUDE]' derivation='None' name='[none:STATION_LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATION_LONGITUDE]' derivation='None' name='[none:STATION_LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATION_NAME (STATIONS)]' derivation='None' name='[none:STATION_NAME (STATIONS):nk]' pivot='key' type='nominal' />
            <column-instance column='[STATION_NAME]' derivation='None' name='[none:STATION_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARTTIME]' derivation='Week-Trunc' name='[twk:STARTTIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[STARTTIME]' derivation='Weekday' name='[wd:STARTTIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]'>
            <groupfilter function='level-members' level='[Calculation_3018467318151557121]' user:ui-action-filter='[Action7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]'>
            <groupfilter function='level-members' level='[none:STATION_NAME (STATIONS):nk]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]'>
            <groupfilter function='level-members' level='[hr:STARTTIME:ok]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]'>
            <groupfilter function='level-members' level='[twk:STARTTIME:ok]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]'>
            <groupfilter function='level-members' level='[wd:STARTTIME:ok]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Exclusions (Start Station Latitude,Start Station Longitude,Start Station Name)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:STATION_LATITUDE:qk]' />
                <groupfilter function='level-members' level='[none:STATION_LONGITUDE:qk]' />
                <groupfilter function='level-members' level='[none:STATION_NAME:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='0.0' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='0.0' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;333 Johnson TEST 1&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;JSQ Don&apos;t Use&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;LPI Facility&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;NYCBS Depot - STY - Valet Scan&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
                      <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;WS Don&apos;t Use&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.445349999999998' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-73.978238000000005' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;E 37 St &amp; Lexington Ave&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.517975200000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-74.031372070000003' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;8D OPS 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.646538366999998' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-74.016587733999998' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;Bressler&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.646606800000001' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-74.015969999999996' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;NYCBS Test&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.646677898999997' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-74.01630342' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;Kiosk in a box Motivate&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.646678000000001' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-74.016262999999995' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;SSP Tech Workshop&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.646768000000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-74.016509999999997' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;NYCBS Depot - SSP&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='40.880920555000003' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-73.896601795999999' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;8D OPS 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='45.505850639000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-73.569109440000005' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;8D Mobile 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='45.506264191' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-73.568905591999993' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;8D Mobile 01&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:STATION_LATITUDE:qk]' member='45.506364054000002' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATION_LONGITUDE:qk]' member='-73.569463490999993' />
                    <groupfilter function='member' level='[none:STATION_NAME:nk]' member='&quot;8D QC Station 01&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_NAME:nk]' direction='DESC' using='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (HOUR(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEKDAY(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (WEEK(Starttime))]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (End Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Exclusions (Start Station Latitude,Start Station Longitude,Start Station Name)]</column>
            <column>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[Action (Distance)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LATITUDE:qk]' field-type='quantitative' max='4986425.60617154' min='4960223.0213568481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LONGITUDE:qk]' field-type='quantitative' max='-8216367.3973273877' min='-8252847.499423245' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LONGITUDE:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LATITUDE:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='marine-label-sm-ln' value='false' />
            <format attr='enabled' id='marine-label-sm-pt' value='false' />
            <format attr='enabled' id='marine-label-md-ln' value='false' />
            <format attr='enabled' id='marine-label-md-pt' value='false' />
            <format attr='enabled' id='marine-label-lg-ln' value='false' />
            <format attr='enabled' id='marine-label-lg-pt' value='false' />
            <format attr='enabled' id='waterway-label' value='false' />
            <format attr='enabled' id='water-label-sm' value='false' />
            <format attr='enabled' id='water-label' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='false' />
            <format attr='enabled' id='hillshade_highlight_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_faint' value='false' />
            <format attr='enabled' id='hillshade_shadow_med' value='false' />
            <format attr='enabled' id='hillshade_shadow_dark' value='false' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.25' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
              <lod column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_NAME:nk]' />
              <lod column='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_NAME:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.1s8jcl817pmgaw1ec9c5b047iumw].[sum:Number of Records:qk]&gt; </run>
                <run fontcolor='#787878'>trips</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#666666' />
                <encoding attr='density-color' palette='density_dark_blue' type='interpolated' />
                <format attr='mark-transparency' value='170' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LATITUDE:qk]</rows>
        <cols>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:STATION_LONGITUDE:qk]</cols>
      </table>
      <simple-id uuid='{71E35D67-F02B-476F-9891-427974C05532}' />
    </worksheet>
    <worksheet name='Query Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Query History' name='federated.13fq8y81qk9rov0zmpu4q1hqvb06' />
          </datasources>
          <datasource-dependencies datasource='federated.13fq8y81qk9rov0zmpu4q1hqvb06'>
            <column caption='Compilation Time' datatype='integer' name='[COMPILATION_TIME]' role='measure' type='quantitative' />
            <column caption='Execution Time' datatype='integer' name='[EXECUTION_TIME]' role='measure' type='quantitative' />
            <column caption='Query Id' datatype='string' name='[QUERY_ID]' role='dimension' type='nominal' />
            <column caption='Query Text - Split 1' datatype='string' name='[QUERY_TEXT - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[QUERY_TEXT]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [QUERY_TEXT], &quot;WHERE&quot;, 1 ) )' />
            </column>
            <column caption='Query Text' datatype='string' name='[QUERY_TEXT]' role='dimension' type='nominal' />
            <column caption='Query Type' datatype='string' name='[QUERY_TYPE]' role='dimension' type='nominal' />
            <column caption='Queued Overload Time' datatype='integer' name='[QUEUED_OVERLOAD_TIME]' role='measure' type='quantitative' />
            <column caption='Queued Provisioning Time' datatype='integer' name='[QUEUED_PROVISIONING_TIME]' role='measure' type='quantitative' />
            <column caption='Queued Repair Time' datatype='integer' name='[QUEUED_REPAIR_TIME]' role='measure' type='quantitative' />
            <column caption='Transaction Blocked Time' datatype='integer' name='[TRANSACTION_BLOCKED_TIME]' role='measure' type='quantitative' />
            <column caption='Warehouse Name' datatype='string' name='[WAREHOUSE_NAME]' role='dimension' type='nominal' />
            <column caption='Warehouse Size' datatype='string' name='[WAREHOUSE_SIZE]' role='dimension' type='nominal' />
            <column-instance column='[COMPILATION_TIME]' derivation='Avg' name='[avg:COMPILATION_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[EXECUTION_TIME]' derivation='Avg' name='[avg:EXECUTION_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QUEUED_OVERLOAD_TIME]' derivation='Avg' name='[avg:QUEUED_OVERLOAD_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QUEUED_PROVISIONING_TIME]' derivation='Avg' name='[avg:QUEUED_PROVISIONING_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QUEUED_REPAIR_TIME]' derivation='Avg' name='[avg:QUEUED_REPAIR_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TRANSACTION_BLOCKED_TIME]' derivation='Avg' name='[avg:TRANSACTION_BLOCKED_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QUERY_ID]' derivation='CountD' name='[ctd:QUERY_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QUERY_TEXT - Split 1]' derivation='None' name='[none:QUERY_TEXT - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[QUERY_TYPE]' derivation='None' name='[none:QUERY_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[WAREHOUSE_NAME]' derivation='None' name='[none:WAREHOUSE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[WAREHOUSE_SIZE]' derivation='None' name='[none:WAREHOUSE_SIZE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:EXECUTION_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:COMPILATION_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_PROVISIONING_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_OVERLOAD_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_REPAIR_TIME:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:TRANSACTION_BLOCKED_TIME:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:EXECUTION_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:COMPILATION_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_PROVISIONING_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_OVERLOAD_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:QUEUED_REPAIR_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:TRANSACTION_BLOCKED_TIME:qk]&quot;</bucket>
              <bucket>&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[ctd:QUERY_ID:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT - Split 1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;GENDER\&quot; AS \&quot;GENDER\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  DATEADD(&apos;DAY&apos;,-((7 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) - 1) \% 7),DATE_TRUNC(&apos;DAY&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;twk:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1,&#10;  3&quot;</bucket>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  (1 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;wd:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 2&quot;</bucket>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;END_STATION_LATITUDE\&quot; AS \&quot;END_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_LONGITUDE\&quot; AS \&quot;END_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_NAME\&quot; AS \&quot;END_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1,&#10;  2,&#10;  3&quot;</bucket>
              <bucket>&quot;SELECT DATE_PART(&apos;HOUR&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) AS \&quot;hr:STARTTIME:ok\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1&quot;</bucket>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;START_STATION_LATITUDE\&quot; AS \&quot;START_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_LONGITUDE\&quot; AS \&quot;START_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_NAME\&quot; AS \&quot;START_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;GENDER\&quot; AS \&quot;GENDER\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  DATEADD(&apos;DAY&apos;,-((7 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) - 1) \% 7),DATE_TRUNC(&apos;DAY&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;twk:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;END_STATION_LATITUDE\&quot; AS \&quot;END_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_LONGITUDE\&quot; AS \&quot;END_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;END_STATION_NAME\&quot; AS \&quot;END_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
              <bucket>&quot;SELECT DATE_PART(&apos;HOUR&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;) AS \&quot;hr:STARTTIME:ok\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
              <bucket>&quot;SELECT SUM(1) AS \&quot;sum:Number of Records:ok\&quot;,&#10;  (1 + DATE_PART(&apos;DOW&apos;,\&quot;TRIPS\&quot;.\&quot;STARTTIME\&quot;)) AS \&quot;wd:STARTTIME:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;&quot;</bucket>
              <bucket>&quot;SELECT \&quot;TRIPS\&quot;.\&quot;START_STATION_LATITUDE\&quot; AS \&quot;START_STATION_LATITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_LONGITUDE\&quot; AS \&quot;START_STATION_LONGITUDE\&quot;,&#10;  \&quot;TRIPS\&quot;.\&quot;START_STATION_NAME\&quot; AS \&quot;START_STATION_NAME\&quot;,&#10;  SUM(1) AS \&quot;sum:Number of Records:ok\&quot;&#10;FROM \&quot;PUBLIC\&quot;.\&quot;TRIPS\&quot; \&quot;TRIPS\&quot;&#10;GROUP BY 1,&#10;  2,&#10;  3&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TYPE:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:QUERY_TYPE:nk]' />
              <groupfilter function='member' level='[none:QUERY_TYPE:nk]' member='&quot;SHOW&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:WAREHOUSE_SIZE:nk]' />
              <groupfilter function='member' level='[none:WAREHOUSE_SIZE:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]</column>
            <column>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TYPE:nk]</column>
            <column>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Multiple Values]' scope='cols' value='Time' />
            <format attr='title' class='0' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[ctd:QUERY_ID:qk]' scope='cols' value='Num Queries' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:TRANSACTION_BLOCKED_TIME:qk]' value='n#,##0,.0K&quot;s&quot;;-#,##0,.0K&quot;s&quot;' />
            <format attr='text-format' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Multiple Values]' value='*#,##0,.0&quot;s&quot;;-#,##0,.0&quot;s&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:TRANSACTION_BLOCKED_TIME:qk]' value='n#,##0,.0K&quot;s&quot;;-#,##0,.0K&quot;s&quot;' />
            <format attr='text-format' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Multiple Values]' value='*#,##0,.0&quot;s&quot;;-#,##0,.0&quot;s&quot;' />
            <format attr='text-align' scope='rows' value='left' />
            <format attr='text-orientation' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT - Split 1:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]' />
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_NAME:nk]' />
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]' />
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_NAME:nk]' />
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[ctd:QUERY_ID:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]' />
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_NAME:nk]' />
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)] / [federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT - Split 1:nk])</rows>
        <cols>([federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Multiple Values] + [federated.13fq8y81qk9rov0zmpu4q1hqvb06].[ctd:QUERY_ID:qk])</cols>
      </table>
      <simple-id uuid='{F82E9144-E577-40FF-B39B-78E59253FEFA}' />
    </worksheet>
    <worksheet name='Query Time Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='Tableau Query History' name='federated.13fq8y81qk9rov0zmpu4q1hqvb06' />
          </datasources>
          <datasource-dependencies datasource='federated.13fq8y81qk9rov0zmpu4q1hqvb06'>
            <column caption='Execution Time' datatype='integer' name='[EXECUTION_TIME]' role='measure' type='quantitative' />
            <column caption='Query Id' datatype='string' name='[QUERY_ID]' role='dimension' type='nominal' />
            <column caption='Query Type' datatype='string' name='[QUERY_TYPE]' role='dimension' type='nominal' />
            <column caption='Start Time' datatype='datetime' name='[START_TIME]' role='dimension' type='quantitative' />
            <column caption='Total Elapsed Time' datatype='integer' name='[TOTAL_ELAPSED_TIME]' role='measure' type='quantitative' />
            <column caption='Warehouse Name' datatype='string' name='[WAREHOUSE_NAME]' role='dimension' type='nominal' />
            <column caption='Warehouse Size' datatype='string' name='[WAREHOUSE_SIZE]' role='dimension' type='nominal' />
            <column-instance column='[EXECUTION_TIME]' derivation='Avg' name='[avg:EXECUTION_TIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QUERY_ID]' derivation='None' name='[none:QUERY_ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[QUERY_TYPE]' derivation='None' name='[none:QUERY_TYPE:nk]' pivot='key' type='nominal' />
            <column-instance column='[START_TIME]' derivation='None' name='[none:START_TIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[WAREHOUSE_SIZE]' derivation='None' name='[none:WAREHOUSE_SIZE:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOTAL_ELAPSED_TIME]' derivation='Sum' name='[sum:TOTAL_ELAPSED_TIME:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[avg:EXECUTION_TIME:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TYPE:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:QUERY_TYPE:nk]' />
              <groupfilter function='member' level='[none:QUERY_TYPE:nk]' member='&quot;SHOW&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]'>
            <groupfilter function='level-members' level='[none:WAREHOUSE_SIZE:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]</column>
            <column>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TYPE:nk]</column>
            <column>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]' value='*#,##0,.0&quot;s&quot;;-#,##0,.0&quot;s&quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:START_TIME:ok]' value='false' />
            <format attr='text-align' scope='rows' value='left' />
            <format attr='text-format' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]' value='*#,##0,.0&quot;s&quot;;-#,##0,.0&quot;s&quot;' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='in-tooltip' field='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_ID:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_ID:nk]' />
              <color column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]' />
            </encodings>
            <reference-line axis-column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-table' value-column='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[sum:TOTAL_ELAPSED_TIME:qk]</rows>
        <cols>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:START_TIME:ok]</cols>
      </table>
      <simple-id uuid='{5A290D45-369E-4FF8-8B9D-7A73911FDE9A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Citibike Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98060' id='23' param='horz' type='layout-flow' w='98888' x='556' y='970'>
            <zone h='98060' id='20' param='vert' type='layout-flow' w='98888' x='556' y='970'>
              <zone h='98060' id='12' param='vert' type='layout-flow' w='98888' x='556' y='970'>
                <zone fixed-size='49' h='5939' id='16' is-fixed='true' type='layout-basic' w='98888' x='556' y='970'>
                  <zone h='5939' id='17' param='horz' type='layout-flow' w='49513' x='49931' y='970'>
                    <zone h='5939' id='15' name='Num of Records' show-title='false' w='49513' x='49931' y='970'>
                      <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='5939' id='21' type='title' w='49375' x='556' y='970'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='92121' id='10' type='layout-basic' w='98888' x='556' y='6909'>
                  <zone h='61566' id='5' param='horz' type='layout-flow' w='98888' x='556' y='6909'>
                    <zone h='61566' id='3' type='layout-basic' w='98888' x='556' y='6909'>
                      <zone h='61566' id='1' name='Pickup Location' w='49375' x='556' y='6909'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='61566' id='7' name='Dropoff Location' w='49513' x='49931' y='6909'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='30555' id='26' layout-strategy-id='distribute-evenly' param='horz' type='layout-flow' w='98888' x='556' y='68475'>
                    <zone h='30545' id='8' name='By Day' w='24722' x='556' y='68485'>
                      <layout-cache minheight='173' minwidth='166' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='30545' id='27' name='By Distance' w='24722' x='25278' y='68485'>
                      <layout-cache minwidth='156' type-h='fixed' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='30545' id='18' name='By Hour of Day' w='24722' x='50000' y='68485'>
                      <layout-cache cell-count-w='24' non-cell-size-w='56' type-h='fixed' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='30545' id='9' name='By Day of Week' w='24722' x='74722' y='68485'>
                      <layout-cache cell-count-w='7' non-cell-size-w='63' type-h='fixed' type-w='cell' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{4DA7BBC4-46DF-4B40-B493-DE73445C23CC}' />
    </dashboard>
    <dashboard name='Query Times'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97904' id='9' param='vert' type='layout-flow' w='98698' x='651' y='1048'>
            <zone h='5504' id='10' type='title' w='98698' x='651' y='1048'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92400' id='5' param='horz' type='layout-flow' w='98698' x='651' y='6552'>
              <zone h='92400' id='3' type='layout-basic' w='80960' x='651' y='6552'>
                <zone h='46198' id='1' name='Query Performance' w='80960' x='651' y='6552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46202' id='7' name='Query Time Distribution' w='80960' x='651' y='52750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='218' h='92400' id='13' is-fixed='true' type='layout-basic' w='17738' x='81611' y='6552'>
                <zone h='46166' id='4' param='vert' type='layout-flow' w='17738' x='81611' y='6552'>
                  <zone h='21756' id='6' name='Query Performance' pane-specification-id='1' param='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]' type='color' w='17738' x='81611' y='6552'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='24410' id='12' type='empty' w='17738' x='81611' y='28308'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='46234' id='14' param='vert' type='layout-flow' w='17738' x='81611' y='52718'>
                  <zone h='8650' id='11' name='Query Time Distribution' pane-specification-id='1' param='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]' type='color' w='17738' x='81611' y='52718'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7DAECB18-6C37-46C6-BC99-5B06FD707ABA}' />
    </dashboard>
  </dashboards>
  <windows pres-mode='true' source-height='49'>
    <window class='dashboard' maximized='true' name='Citibike Data'>
      <viewpoints>
        <viewpoint name='By Day'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[avg:TEMP_AVG_C:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='By Day of Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='By Distance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='By Hour of Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Dropoff Location'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Num of Records'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pickup Location'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <geo-search-visibility value='1' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{293EC289-8D9E-4957-B826-E0B91D6CD07B}' />
    </window>
    <window class='worksheet' name='By Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_67765169062858752:nk]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:GENDER:ok]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:USERTYPE:nk]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[yr:STARTTIME:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F6B36E65-10BE-46CE-82E1-31030C710E97}' />
    </window>
    <window class='dashboard' name='Query Times'>
      <viewpoints>
        <viewpoint name='Query Performance'>
          <highlight>
            <color-one-way>
              <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Query Time Distribution'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2A6753FF-221D-4E9F-B8AB-9915B82790C4}' />
    </window>
    <window class='worksheet' hidden='true' name='By Day of Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 2:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 2:nk]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[tdy:STARTTIME:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B627E7EF-EDA3-47CD-8393-3FA414203D64}' />
    </window>
    <window class='worksheet' hidden='true' name='By Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[:Measure Names]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 2:nk]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:Calculation_3018467318151557121:ok]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[tdy:STARTTIME:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B812DE71-461A-4172-8FB9-27A46DCDDCA3}' />
    </window>
    <window class='worksheet' hidden='true' name='By Hour of Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[io:Set 1:nk]</field>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[tdy:STARTTIME:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9C160E3-143C-4A91-A534-0A896E991B12}' />
    </window>
    <window class='worksheet' hidden='true' name='Dropoff Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:END_STATION_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F49BBB33-9FA4-4691-9560-3B6749E59041}' />
    </window>
    <window class='worksheet' hidden='true' name='Num of Records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1F58460D-1994-4598-B7F7-811075D650CF}' />
    </window>
    <window class='worksheet' hidden='true' name='Pickup Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s8jcl817pmgaw1ec9c5b047iumw].[none:START_STATION_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02B45623-B0F5-42BF-8DDA-FF35C64B5D14}' />
    </window>
    <window class='worksheet' hidden='true' name='Query Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[:Measure Names]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:EXECUTION_STATUS:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_ID:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT - Split 1:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TYPE:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_NAME:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[yr:START_TIME:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBC3A917-3C88-4100-B19B-3EBD56EF238C}' />
    </window>
    <window class='worksheet' hidden='true' name='Query Time Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[Warehouse Size &amp; Warehouse Name (Combined)]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:EXECUTION_STATUS:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_ID:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT - Split 1:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TEXT:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:QUERY_TYPE:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_NAME:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[none:WAREHOUSE_SIZE:nk]</field>
            <field>[federated.13fq8y81qk9rov0zmpu4q1hqvb06].[yr:START_TIME:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58772C95-BD49-404F-B977-C4D4554ABF02}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='By Day' width='192'>
      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
      7owAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Citibike Data' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9ebReVX3w/9l7n+kZ75x5DiEJCaOAEgiTDIoGFKQiVeCHvK+04sBaddkl
      6rKt1JZixbaKrtUfxZ8Dr4JAmNJK0IIBREJCwhQyJyS5SW7u9Mxn2Hv//njuvclNckNofatt
      zmetu1byPGfYZ5/9fOe9t7DWWlJSUlJSjjnk77sBKSkpKSm/H1IFkJKSknKMkiqAlJSUlGOU
      VAGkpKSkHKOkCiAlJSXlGCVVACkpKSnHKKkCSElJSTlGSRVASkpKyjFKqgBSUlJSjlFSBZCS
      kpJyjHLUCsBaO/J38GdHOscYM3LMwMAAfX19b3ustZY9e/ZQrVaPtnkpKSkpKe8Q9bWvfe1r
      RzrAWsv27dv59re/zT//8z+zfPlypJTMmTOH2267jaeffpoLL7wQYwxr1qwhl8vh+z4AcRxz
      9dVX4zgOJ5xwAt/85jdZvnw5l1xyySH3Wb16NTfffDNnnHEGra2tXH/99RQKBebNm/eOHyoM
      Q/7qr/6KZcuW8dRTT/Hyyy/j+z4TJ05ECPG2569btw5jDLlc7h3fOyUlJeW/C2/rAWzbto0b
      briBtWvXcuGFFzJnzhyef/55ABYvXsy5554LgNaaW265hdWrV4+cq5TiQx/60FEJ8fHjx3Pl
      lVfS3t7+H32WEbTWPPPMM1SrVVpbW3nllVe4+eab+d73vndEj2WY22+/nccee+w/3Y6UlJSU
      P2ScI31preU73/kOhUKBe++9l0KhMPI5QLFYREpJo9HgZz/7GUmS8Ktf/Yq33nqLE088kYUL
      F1IsFslmsyPXTJKEhx56iHXr1jF//nyWLFmCUmrEcwiC4JB29Pf388QTT3DeeecxefJk1q9f
      z4MPPkgcx1x66aWceeaZh7XsP/jBD/L+978fYwx333039957LxdccAHz5s1j06ZNrFixgr17
      99LZ2cmSJUtob2/nkUceobe3l9WrV/PjH/+YKVOmcN5557Fx40ZWrFhBT08PXV1dLFmyhI6O
      jv9U56ekpKT8PjmiB2CM4Te/+Q1XXXXViPAHRoTt448/zrJly0iShNWrV2OMYcuWLaxatYrd
      u3djjOH73/8+r7322si5zz77LMuXL6enp4fbb7+dH/3oRwD09PRw1113MTg4OKoNcRzzla98
      haeffppx48axfv16brrpJur1OkopPv/5z7N27dojP6SU3HDDDRQKBZ577jkAvvGNb/Diiy8S
      xzEPPfQQn/vc54jjmFdffZVarUZ3dzerVq1iy5YtQNMrWLlyJXEc8/Of/5xbb72VJEmOtp9T
      UlJS/uA4ogdQq9Wo1+tMnTr1iBfJ5/PccccdXHDBBdx4440jYaHDCcjFixfzzW9+E2std955
      J0uXLuX6668/7HWNMXzve99jy5Yt3HvvvXiex09/+lNOP/10/uIv/gKAUqnEQw89xMknn3zE
      NmazWcaPH8++ffsA+Kd/+ic8zxvJXdxyyy0MDAzw5S9/mTfffHPkWYa5++67R45ftWoVn//8
      5+nv76erq+uI901JSUn5Q+WICiAIApRS9Pf3/85uKGXT6RBCcPLJJ/PII4+gtT7ssf/wD/9A
      rVbjrrvuGhG0W7dupVwu89WvfhVo5ijy+fzb3ldrTblcJpvNYq1l2bJl/OxnP6Onp4coitBa
      E8fxYc+11vL4449z//3309PTQxzHaK1TDyAlJeW/NUcMATmOw/z581m+fPlRJU+Boz4OYM+e
      PQRBMKIUDubiiy9m2rRpPPjggyPCNp/PM27cOM4991zOPfdcPvnJT3LTTTe9bZt++9vf0t3d
      zSmnnML27du54447uO6663jiiSdGwlAHYowZ+feWLVv45je/yY033siyZcu49957j/oZU1JS
      Uv5QOaICEEJw/fXXs3LlSr7xjW+wYcMGXnjhBX784x8feiEpaWlpGUmUjuU1DA4O0tPTw8qV
      K/nJT37C4sWLxyzNXLBgAXfeeSerV6/m7rvvxlrLGWecwbp162hpaeGss85i3Lhx7Ny587Dn
      b9iwgRUrVnDPPffw53/+55x++um8+93vplKpADBt2jSq1SoPP/zwqPNaW1tZuXIl3d3d9PT0
      UC6XR46vVCo88sgjR+q2lJSUlP8WHDEEBHD++efz5S9/mbvvvpuHH34YKSUf/vCHmyc7Dkop
      oKkArr/+eu666y6WLl3KzTffzHXXXYfruiMWvuu6VKtVlixZgrWW0047jc985jNAU9m4rjty
      X9d1UUoxY8YMbr/9dr74xS8yd+5crr76al599VU++9nPYq0ln89zww03jGrz8LXuu+8+fvrT
      n9LZ2clVV13FJz/5SVzX5bjjjuOkk07ixhtvxPM8Fi9ejOd5I+289tprue2227jiiiu46KKL
      +OpXv8qCBQu4/vrrR453Xfeo5hSkpKSk/KEixtoU3lpLqVQa+b/Wmr6+PrLZ7BEnSFWrVSqV
      Cp2dnSPKYRhjDFJKqtUqURTR1tb2H254uVwmiiJaW1sPuc/RoLWmu7ubYrFIsVg85PtGo8Hg
      4CCtra34vo/Wml27dtHa2jpSESWEOOy5KSkpKf8dGNMDsNYeNtSTsp9cLjdmBVNKSkrKHzpj
      egApKSkpKf+zSVcDTUlJSTlGSRVASkpKyjFKqgBSUlJSjlFSBZCSkpJyjJIqgJSUlJRjlFQB
      pKSkpByjpAogJSUl5RglVQApKSkpxyipAkhJSUk5RkkVQEpKSsoxSqoAUlJSUo5RUgWQkpKS
      cozyjhWAtfaIu35VKhUajcZ/qlH/1bzdM6WkpKT8T2TM5aCNMdxyyy34vo/jOMyZM4dPfOIT
      eJ7Hl770Jf72b//2sOc99dRTFItFLrjggt9JA7/1rW/x2c9+9j+05v9Y7Nq1iyAIaG9vB+Dl
      l1/mjTfe4Nprr/2d3SMlJSXld4G1lk9/+tO4rovneZx++ulceeWVozbQ+o/yth7At771LW6/
      /Xby+Tz/8i//gpSSL37xi6OOMcaM2kP3nXKkDdY3bNhwyGfWWpIkIUmSQyz3g9syfOyBx/36
      17/m9ddfH/n/ggULWLJkyahrRFF0yLWHrzXWJvYpKSkp/zcwxnDXXXfxla98hb1793LXXXeN
      +t5aOyL3huVUHMeHyLCDZe3bbgkJ4HkeV1xxBbfddhvWWn7wgx9w6623Yq3lgQce4Pnnn8da
      y4033jiqQc899xxbt27lox/9KN/97nf57Gc/C8DDDz/MggULyOfzfOtb30JrTRiGnHPOOXz0
      ox894laL1lqWL1/OQw89hO/7nHrqqXziE5/AWst9993HSy+9BMCnPvUpwjDkBz/4AY7TfMw/
      +7M/Y/PmzSxdupRMJsNjjz3Gxz72MbLZLG+88QaXX345/f393HHHHURRhJSSW2+9lUmTJvGP
      //iPNBoN9uzZQ6VS4Ytf/CIzZ848mu5LSUlJ+U8zvAPhLbfcwqc//Wn27t3L+vXrUUrx4osv
      0tPTw1/+5V/y61//mvvuu49MJsP8+fO56aab6Onp4c4770RrTRRFvOc97+Haa689sgIwxhCG
      IcYYHnzwQRYuXIi1lm3btgHwyiuvsHbtWu644w6stdTrdTZv3gzAm2++yf333883vvENrLVs
      37595Lr79u2jXq+PuDR/8Rd/gTGGL3zhCyxevJjJkyeP2aa+vj6WLl3K3//93+O6Ll//+td5
      9dVXqVarbNu2jb/7u78beUitNX/913+N7/v86le/4tFHH+XGG2/kiiuuYPLkyZxzzjkArFmz
      hp6eHgDuuecePvCBD3DOOefw+uuv893vfpevf/3rvPXWW1x33XUsXLiQZ555hueeey5VACkp
      Kf/lCCE48cQT2bp1KwMDA/zwhz/k4x//OLfccgvVapUf/ehHfPvb3yYIAv7mb/6GlStXMnHi
      RJRSI/L4C1/4Aueee+6RFcDWrVv5yle+AjTDJNddd92o71etWsWSJUtGLOzhmNQTTzxBb28v
      d955J5lMhjiOx7xHR0cHSimUUpx55pls27btiApg48aNnHHGGQRBAMB73/teXnvtNfr6+liy
      ZMnItTzPY9++fdxzzz0MDAxQLpeZNm3a23bu9u3b+dznPgfA/PnzKZVKGGNwXZcZM2YAza0g
      0zBQSkrK74tGo4HneQB84AMfGAlhb9myhdNOO41MJgPAJZdcwtq1a5k4cSLt7e0judSzzjqL
      rVu3HlkBzJo1izvuuGPUZwcKvlwuN2rj+GFOOukkXn31VdauXcv5559/VA9krWXv3r2ccsop
      Rzwum81SLpdH/l8qlchkMuRyuVGfA3z3u9/lgx/8IKeeeipbt25l6dKlQFODjlX14zgOjUaD
      fD5PkiQYY44YkkpJSUn5r6TRaLB27Vo+9alPsWPHDiZOnDjyXSaTOax8PBBrLXv27GH+/PlH
      lwMYi/POO48vfelLdHV1kSQJuVwOgClTpvCRj3yE2267jSAIOOOMMxgcHGTr1q3s3buXX//6
      15x55pkAdHd3s23bNtatW8emTZuYM2fOqHsYY1i5ciVSSlzXZf78+XznO9/hpZdeolgs8vDD
      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
      0zinsQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Query Times' width='384'>
      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
      oaGhJCcn09nZSV1dHfPmzaO0tFRRAoeHh7No0SIqKyu5cuUK2dnZzJ8/n3379pGSkoLP52PT
      pk0cOXKEJUuWcODAAaKioggMDCQiIoLm5mZ8Ph/33HMPp06dIjU1lfb2diVjV19fH2fOnGFw
      cJCHH36YvXv3EhISglqtJj4+nsrKSnw+H3l5eeTl5fHrX/+aTZs2kZ2dzZ49e4iMjKSrq4uN
      Gzdy4cIFampqmDt3LitXrlScjEAgEMwWbsoB+JOle71eXC4XhYWFE5YbGBggMTGRhQsXKlm/
      li9fjkqlwmKxKD1oWZZJTU1l6dKlaLVa3nzzTbZv3648JOfNm4fb7aa0tBQYVQIXFRVhtVqJ
      iYnh3nvvZWRkhHXr1uFyuUhOTmbDhg3s2rVLUeLKskxmZiYrVqxg586dwGhYifnz56PVaomM
      jEStVit5hwEGBwcpKiqivb0dSZKw2WysXbuWyMhIZeRgt9uZP38+zc3NFBcXK44oICCAe++9
      l2PHjuFwOBQb169ff/t3RyAQCO4gN3QAHo8Hr9dLVlaWsgbgD9nwUVasWMGFCxd45ZVX2LRp
      E2azmVOnTmEwGEhLG7sdsbFxNO5Neno6Ho/num3CqBLYryuYiNraWurq6li1atWYOC0VFRX0
      9PSQnZ1NXl4e586d45VXXmHLli1jQkD4ycrKAiA2NhaAzZs3c/r0aWRZZuvWrWPKlpeXK4no
      PR4PVquVF198kZCQECWEhUAgEMxmbugA3G43LpeLrq4uZfdPRkbGhAvB7e3tZGVlIUkSnZ2d
      hIaGsnTpUiRJwmKx4HK5lDy96enpLF26FI1GQ0dHB+fOnWPOnDlotdpb3gublZVFamoqNTU1
      FBQUKO8XFBQoD+PGxkZycnKQZZmuri4iIyOVcg6Hg5GRkTGJ691uN4ODg6xdu5Y9e/aMOZ/H
      48Fms5GYmIjT6aSuro7g4GBKS0vZs2cPQ0NDk4auuHr1KjExMePUxwKBQDCd3NABDA8P09DQ
      gNvtVhZr/YrgjxIQEMCHH36I0WhkwYIFuFwuTp48iV6vp6ioCK/Xy8mTJ1m4cCGyLHPy5EmS
      k5NZtmwZZ8+epaysjJKSElQq1aQ9fhjN5StJElqtltzcXFJTU9Hr9ZjNZubPn4/RaFSifPpt
      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
      F0IIcesasA2gvb2dvLw8UlJSgJ4snJ2dnfqyuDEdTi9bP76gLz9kP4hFCV57hxtgSMzDPFsm
      qBG3gE4HNLcPb9/MNJiUMbLl+TM1qG6g1dXVeo+V7u5uFi5c2O+2vT2FrnwFvHpZURR9u97l
      K9f1/v+VPwOor6/XM2le+fNrleNKvdv1jkq+cpv+lq8u/5Wf4eryXesz9/7c5/Nx4cIFCgoK
      +hwboLPbx+Z9Z/Xltcm/A0P/3WxvlDFvhQQAcWtwOIc/ElhRJAAM0oABICEhgXvuuUfvX3/l
      TfRqFRUVnDx5EkVRuOeee9i5cyfJyclYrVbmzJnDhQsXWLhwIR0dHbzxxhtkZmaSm5tLRkYG
      b731Fna7nenTp1NXV0dtbS3Tpk3T5wTet28fX/jCFzh48CAnTpzg6aefjjj3xYsXmTRpEtBT
      V/vv//7vpKamEh8fz5o1awgEAvzTP/0TX//61wmHwxw+fJi6ujry8/Ox2Wy0t7djtVq56667
      Iga5tbe388Ybb5CUlERmZiZLly7lvffeo7u7m4cffph9+/bR0dGB1+tl1apVnD59mvLycqZO
      ncq8efP0OQ727t1LQUEBU6ZMGfaXJYQQI2nAAHDp0iX8fr8+L67P58Nut5Oent5n2/r6eoqK
      irjttttQFIW4uDg2btwI9MwJ3JvjR1VVZs6cqffR37JlCw8//LCeYbSoqChiTuDGxkZ9spWC
      ggLa2/u+Gp48eVIPAJqmMWXKFDZu3Mjbb79Na2srra2tLFu2jNLSUlavXs2GDRvYtWsX9957
      L/v27WP16tUkJvZNP6uqKrNmzWLZsmW89tprqKqKw+EA0LuErl27Fq/Xy5kzZ1i/fj0ej4cH
      HngATdM4ePAgCQkJmEymASe5EUKIsTSiU0KuXLmStrY2fv/739PR0aHPCLZv374+25aUlLB9
      +3YqKysJBoPXTS996dIlMjMzURSlTwqK9vZ2du3aRWVlJXv27Okzn3BGRgbd3d2cOXOG9PR0
      zp8/32cbTdN477332L59u35zv9KpU6d4/fXXyc3NpbW1VU8gd+7cOVRVZevWrWzdupX58+dH
      7Ofz+YiJiUFRFFasWDEivSOEEGKkDPgGEBsbS3V1dUT9/NU3ul6XLl1iyZIlJCcnU1NTo88J
      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
      xlc6QSFGmcvl0kem9na5M5lMpKWl3eSSCTGyuru7cblcZGZm0traSlJSUp/uuPIGICaU5uZm
      Nm/ezHPPPceePXtoamqio6MDv9+P0+kkEAhw6dIlfbRxc3PzTUkMJsSN+uCDD3j88cdxOBz8
      5je/oa2tjUAggKZp+P1+AoGAvAGIiWX69Ok8+eSTdHd385WvfIUtW7YQHR3NCy+8oN/wU1JS
      WLZsGQ0NDfp0oz/60Y/G1WQwQgzG3Llzee2114CePF+/+tWv+Na3vsVPf/pTMjMz5Q1AiN5R
      tU8//TRFRUX85V/+JV1dXRw7dgyr1UpjY+OYp+kVYiQsX76cU6dO4XQ6+/25BAAh+qEoCtnZ
      2UyePJk1a9ZgNptvdpGEGDKTycRDDz3Exx9/jMFg4MKFC7z66qt6wjlJBXGTSSqIsRcIBGho
      aGDq1Km0trZiNBpxOBxkZmbS0tJCamoqnZ2dJCQkcOrUKVJTU8nPz5cqoDEkqSBuXHt7O4qi
      EBcXR0lJCYWFhZSUlGA0GklISMBsNksAuNkkAAjRlwSAsSFVQEIIMUFJABBCiAlKAoAQQkxQ
      EgBusuFOlyfEn7OxnBRlIpNGYCGEmKDkDUAIISYoCQBCCDFBSQAQQogJSgKAEEJMUBIAhBBi
      gpIAIIQQE5QEACGEmKAkAAghxAQlAUAIISaoAQNAOByms7NzXMyIpKoqqqqO+nk0TbvheWA1
      TSMcDgPQ1tZGR0fHDR0vFAohg7aFECPpunMCV1dX8w//8A/ExsbS2dnJxo0b+fSnPz2qE2N0
      dXXx7LPPomkabW1tpKSkoCgKTz/9NOXl5djtdu67774ROddXv/pVPRdPTk4OX/3qV0lLS6Or
      q4sf/vCH/PjHP+53v3A4zKFDh1i2bNk1j11eXs7OnTv5m7/5Gw4fPoyqqjzwwAODKldLSwtd
      XV0UFBTo67797W/zd3/3d8TGxg7hEwohxHVo1xAOh7Wvfe1r2vHjxzVVVTWHw6E9+eSTWnV1
      taaqqhYOhyO2VVVV0zRNU1VV6+rq0lwul76u9+eqqmo+ny9i+6v376WqqvblL385Yr3P59N8
      Pl/EPg6HQ/N4PJqmaZrL5dK6u7sj9nG5XJrD4ehzfE3TtC9/+ctaMBjUfD6ftmXLFu3JJ5/U
      vF6vpqqq5nQ69e2CwaDW3d2tBYNBTVVVzev1an/5l3+phUIhLRQK6eXp/a/f79dCoZDmcrk0
      TdO0HTt2aNu2bdOcTqfm8Xj6XJdeoVBIU1VVO3jwoPZv//ZvWigU0o/rdDojztHR0aG53e6I
      6xUOh7VAIKB1dnbq5RJCiGu55htAfX09cXFxzJs3T59W7LOf/Sx79+5l06ZNvPzyyzzzzDMA
      /OIXv+DRRx8lIyOD3/72t5SXlxMOh1m9ejUPPfQQr732GpMmTWL79u3ExMRgNBp55JFHKCgo
      IBwO89xzz/H9739/wKfbvXv3Eh0dzfLly/nlL3/JhQsXMBqNNDU1UVhYSGtrKx0dHTz11FMs
      XryYt99+m23bthEdHU1WVhbf/OY3MRj61npZrVY2bdpEaWkpx48fZ86cOfz85z/ne9/7HnV1
      dfzwhz8kPj6e7u5unn32Wf7whz9QXl7Od77zHWJjY3n++ef5l3/5F9asWcOvf/1rFi9ezD33
      3MP27dv5xje+AcCrr77KBx98QHt7O5/5zGe499572bNnD2azmZUrVwLw/e9/ny996Uv89re/
      xeVycfbsWVatWsXGjRv553/+Z5599llUVeUHP/gBbrcbl8vFZz8YEz7MAAAgAElEQVT7Wdau
      XUt5eTn/9//+XzRNw2QyYbfb+cEPfiDTGAohrumaAaC1tZXs7OyIG0hubi5HjhwhHA7T1dWl
      r3c4HITDYSorK6mrq+MnP/kJwWCQZ555hnvuuQeXy8W//uu/8td//dcsXryYgwcP8vrrr/M/
      /sf/oLa2Fk3TBlW14Xa79Ru4w+Hg8ccfZ86cObz88ssoisJ3v/tdiouLOXjwIEVFRbzxxhv8
      7Gc/w2az8bd/+7dUVlYyc+bMfo+tKApFRUXU1dVRVFSk19l/+OGHrFmzhkceeQSXy4XRaOTZ
      Z5+lpaWFn/70p/r+7e3t/OxnP+O5555jxowZnD9/HofDof/8/vvv57HHHsPlcvH1r3+dNWvW
      4PF4IiYbb29vJz8/n69//euUl5fz5JNPRvxMVVXeeustpk+fzhNPPEF3d7d+TYPBIAkJCXzv
      e9/DYrHw9NNP4/F4iI6OHvC6CiEmpmsGAJvNhtfrjVjn9Xqvm7++qqqK7u5uXnzxRaDnJt3W
      1gbAE088wdKlSwFYtGgRv//97+nq6uKdd95hw4YNwyp8amoqiqJgsViIj49HURSsViuaptHc
      3Izb7eaPf/yjXpaampprBgDoCTB2uz1i3ZIlS/jBD35AcXExK1asYPXq1Xrj7pUUReHb3/42
      M2bM6PfYsbGxKIpCbGwskydPprOzc1ifuaysjC9+8Yv6W1nvxOYA6enpWK1WoOf7G4sGcyHE
      reuaAWDy5MmUlpYSCAT0yRk++ugjZs+efc2D2e12srOzWb9+PQDr16/XJ3ZOS0vTt7NYLKxb
      t47t27dTXFwc8aQ7Umw2G8nJyRFlSU1Nveb2Pp+PPXv28P3vfz9ifU5ODi+88AJ1dXX84Q9/
      IBgMsnbt2j43V0VRrnv8XqqqcunSJaKioq67XX9BBiAmJoaOjg7y8vLQNA2Hw4HNZsPlcg14
      biGEuNI1u4EmJiayYMEC/v7v/56ysjJef/11Dh8+zNq1a4mKiuLChQucPXuWbdu2cfToUQDm
      zZtHaWkpVVVVtLW18cYbb9Dd3d3v8e+//342b97MzJkzsdlsI/7BMjMz0TSNI0eO0NXVxZ49
      e6iqqorYxufz8f7777N161aeeeYZli1bRk5OTsQ2O3fu5O233yYUCmG32zEYDBiNRhRFYd++
      fZSUlAyqPBUVFZSUlPCLX/yCgoICYmJiSEhI4MiRI5SVlfHb3/4Wp9MJQEZGBkePHqW0tJTa
      2tqI46xdu5YXX3yR06dPs2XLFkKhEOnp6TdwpYQQE5Xx+eeff/5aP7zzzjvx+/0cOHAAh8NB
      Z2cn69atIz4+nqSkJPbv309SUhKrV69m2rRpxMXFsWjRIkpKSmhsbGTJkiXk5eURFRVFZmYm
      MTEx+rGtVitHjhzhscceIyUlpd/zx8bGkpeXp7dDWCwWMjIyiI+Px263M3nyZCwWC1arVV9v
      MplITEwkMzOTu+++m+rqas6dO8eMGTNYsGBBRBWW1WrF6XRiMpn41Kc+xapVq1AURa9eyc7O
      JiUlhbKyMo4dO8bs2bNZv349RqOR22+/nUOHDtHd3U1hYaH+9tNbp280GklMTGTSpEmYTCZC
      oRBnzpwhPz+fL37xixiNRrKysmhpaaGkpIR58+Yxd+5c8vLySEhIIDY2liNHjpCamkpmZibR
      0dHk5uaSnp7OlClT2LNnD6qq8ld/9VfYbDaMRiPJycl6MIiOjiYnJ0emnBRCXNOQpoR8++23
      MRgMrFu37oZO2tXVxcGDB9m3bx8//vGPpaeKEELcBDdlTuD6+no++ugj1q1bR2Ji4lifXggh
      BDIpvBBCTFiSDE4IISYoCQBCCDFBSQAQQogJatwHAGmiEEKI0THuA4CkMxBCiNExqgFA0zT9
      CV77ZIKUK5/o+1snhBBibFx3Qpgb0djYyNatW1mzZg3Tp0/ntddeQ9M0pk6dysKFCwE4ffo0
      JSUlaJrG5z//eX1AmAwME0KI0TdqAcBut7NixQo9dXRiYiJr1qxh8+bNegAoLy/nscce46OP
      PqK+vp7Dhw9jNBpZvXo18fHxaJqGqqryhiCEEKNg1KqAEhMTMZl64ovf7ycmJkZPpKaf3GDA
      YDAQExODx+PB4XBQUFBAfHz8aBVLCCHEJ0btDeBK8fHx1NfX43a7CYfD+Hw+wuEwiqLoefrv
      vvtuHn74YYqLi9E0jaKiIn1/SWgmhBAjb9RSQZw+fZoLFy4AcPvtt9PV1UVVVRUrVqxA0zRc
      LheJiYns3buX7OxsioqK2Lt3L6FQiFWrVukzWYXDYQkAQggxQjS/i9CFgygm6/jPBSQBQAgh
      Robq7cT76uOonTXALTAOQAghxMgIle/Ub/4wRm0AQgghRpfaVY9v/z+idtRgyl2GddkzKOar
      pp7VIgfWyhuAEELc4jQ1jHfXdwif34fWVUuw+E8EDv+mz3amgntR4iZdXh7LQgohhBh5ms+B
      2h4553mo8TjWq7YzRKdif+wVQtV7UIw2CQBCCHGrU2xxGOIno7ad09cZ02b3u63BnoSl6DM9
      /z8mpRNCCDFqFIMJ270/wpA5ByUqCdOMe7Eu/m8D7yfdQIUQ4s+DpoZBDYLROqicalIFJIQQ
      fyYUgxEMg39gliogIYSYoCQACCHEBCUBQAghJigJAEIIMUFJABBCiAlKAoAQQkxQEgCEEGKC
      kgAghBATlAQAIYSYoCQACCHEBCUBQAghJigJAEIIMUFJABBCiAnqpgYATdMY59mohRDiz9aY
      pIOurKykuLgYgI0bN2K321FVlbfeeguXy8WyZcuYMmXKWBRFCCHEJ8YkAJSVlXHPPfdw5swZ
      mpubmTp1Ks3NzcTExLB27Vp27tyJpmmcOHGCnJwc5s2bp78ZyFuCEEKMjjEJANnZ2bz55pt4
      vV7mzZsHgNPpJC0tDau1Z9rikpISpk6dSnZ2NtAzE1jvzV9V1bEophBCTChjEgDKy8v50pe+
      RFVVFZWVldx+++0kJCRw5swZ8vLyAFi1ahXnzp1j586dfP7zn8dk6imaTAkphBCjY0wagRcs
      WMDWrVs5e/YsBQUFHDhwgLS0NAKBAFu3bmXx4sWUlZVx4cIFJk2aNBZFEkKICU8mhRdCiAlK
      xgEIIcQEJQFACCEmKAkAQggxQUkAEEKICUoCgBBCTFASAIQQYoKSACCEEBOUBAAhhJigJAAI
      IcQEJQFACCEmKAkAQggxQUkAEEKICWpY6aCbmppoaGggPT2drKwsSdYmhBC3oCEHgK6uLl59
      9VWsViu5ubkA+iQuQgghbh3DqgIyGo0Eg0HOnDmjz+glhBDi1jKs+QDq6+spLi4mPz+fgoIC
      FEUZjbIBMh+AEEIMl9rdjP+Dn6C2n8OYvQTr0m+imKP0nw+5CsjlcvHiiy8SHR3N2bNneeqp
      p0hISBjRQgshhLgxmqbie/s5wg1HAVDbq8Fgwrb8b/RthhwAVFVlxowZfO5znwOQp3MhhBiP
      /N2EW8siVoUbjkQsDzkAaJrGkSNHaG1tBeArX/kK8fHxN1BKIYQQI84SjSFhCuoVQcCYOjNi
      kyEHAKPRSGFhIQ899BAAMTExN1hKIYQQI00xmLCt+z/43vvfqI56jJPmYln63yO3GWojsM/n
      49VXX0VVVQAeeeQRYmNjR67UV5FGYCGEGD5NDUPID+aoPh12hvQG0NzcjMPhICEhgXA4DIDB
      MHBPUk3TKCsrw+l0smDBAsxmMwB1dXU0Nzczb948fZ0QQoiRoxiMYLH3+7MhjQOw2WxER0dz
      2223UVhYSGFhIRaLZcD9iouLaW9vJysrSw8c3d3dHDx4kOjoaPbu3UsoFKKxsRG32z2UIgkh
      hBimIVUB1dTUUFpayqZNm4Z0kv/6r//CbrdjNBpZtWoVNpuNyspKfD4fRUVFvPnmm0RFRRET
      E0NMTAzz5s0jFAqhqirDGKYghBBiEIZUBaRpGtu2baO4uFhf9/TTT5OYmHj9k5hMLF++nPr6
      ekpKSli4cCFGo5FQKISmaWiaxowZMzh+/DiTJ0/W9wFpAxBCiNEy5DeAkpISHnzwwSGd5PTp
      01RXVxMOh5k7dy7Nzc3Mnz+fV155hczMTGJjY7HZbKiqSkVFBV/4whf0fSUACCHE6BhSAAiF
      QoRCIWw225BOomkaly5dAiA1NRWXy0VsbCwulwun00lmZiZ+v59Lly6RnJyM3X65wUICgBBC
      jI4hB4BgMBixzmq1Dqon0HBJABBCiNExpDaAyspK3n33Xerq6pg6dSq1tbU899xzJCUljVb5
      hBBCjJIhBYDZs2eTkZHBli1bePLJJ9m+fTvt7e0SAIQQ4hY05LqbxMREoqOj+dGPfkRtba1M
      BiOEELeoYU0JmZOTg8FgID8/f6TLI4QQYowM+Q3g0qVLlJeX4/f7aW1tpaGhYTTKJYQQYpQN
      +Q0gJiaG9vZ22tvbqa6u5q677hqNcgkhhBhlQ84GqmkaTqeT+vp6FEVh9uzZMiWkEELcgob8
      BuB0OtmxYwdut5vu7m4SEhLIysoajbIJIYQYRUNuAzAajdTV1eH3+ykoKNCzewohhLi1DLkK
      CKC+vp5AIIDVamXSpEkyElgIIW5BQ75zezwefvOb37B//35efPFFfD7faJRLCCHEKBtyAAgG
      gxQWFvIXf/EXLFy4kKamJn16SCGEELeOIVcBeb1efv3rX2MwGAgEApjNZjZs2EBBQcGoFFCq
      gIQQYnQMqxvoiRMnqK2tBWD9+vVER0ePSuFAAoAQQoyWIXcD7erq4uDBg1itViwWC36/f1QD
      gBBCiNEx5DYAs9lMYmIiFouFrq4uOjo6RqNcQgghRtmQqoCu3NTj8dDU1MS0adNkJLAQQtyC
      hlQFVFpayq5duyLWPfXUUyQkJIxooYQQQoy+Ib0B+Hw+3G43NpsNg8GA2+0mNjYWq9U6agWU
      NwAhhBgdQ3oDuHjxIiUlJaSkpBAdHc25c+dYunSp5AISQohb0JB7ATU3N+P1eomKiqK5uXk0
      yiSEEGIMDKkXUEpKCmlpaVitVlRVZfLkyYOu/1dVlba2toh1LpeLxsZGhpGOSAghxA0aVjK4
      4Th06BCHDx/mmWeeAXraE/7zP/+TyZMnY7fbWbJkiV7ff2WvImkDEEKI0TGkKiC3292n339m
      ZiYm0/UP09nZSXNzMzk5Ofq6xsZG5syZw9y5c3nzzTc5cOAA7e3tpKWlsXTpUkKhEJqmoWma
      pJwWQohRMKQA0NzczMcffxyx7sEHHyQmJuaa+2iaxpYtW5gxYwalpaU0NTWRmZlJOBzGZDKh
      KAqKohATE0NLSwspKSkA+lO/qqqjmm5aCCEmqiEFgGnTpjF16lTef/99Lly4oD+hD+Tee+8l
      FApRVVWF3W6nvLycrKwstm3bBvTMMxwbG8uiRYvYu3cvBQUFEdVAoznQTAghJqohP1p3dHRQ
      VVWFyWQiNjaWQCBw3e0VRSEzM5MpU6awbt064uPjiYqKIiYmhuXLlxMIBFi1ahWJiYlcvHiR
      devWDfvDCCGEGLwhNwJ7PB7eeustPB4PDQ0NfOELXyA3N3eUiieNwEIIMVqGHABCoRCtra0k
      Jydz/vx5cnNziYqKGq3ySQAQQoiraEEfwbNbUDtrMeUtw5i9ZFhV5UOqAtI0jcrKSrZs2UJT
      UxMffvghFy9eHPJJhRBCDJOm4Xvvb/Hv/QHBky/hffMbhCrfGdahhtwGcOrUKZqamjh8+DB5
      eXmjWv0jhBAikurtJFS99/IKLUzw7JZhHWtIAUBRFD73uc+xdu1aLl261HMA6aIphBBjRjFZ
      wWSLXGeLH9axhnz3bmtr4/Tp0zz++ONcvHiR8+fPD+vEQgghhk6xRGNd+jQYe7IwK7GZWBZ+
      bVjHGnIyOJvNRldXlz6o63qDwIQQQow8c9GjmHKWobqaMabMQLHGDus4Q54PwOPxoKoqp0+f
      pqCggMzMzGGdeLCkF5AQQoyOIVUBXbx4kd27dxMdHc1dd91FQkICqqqOVtmEEEKMoiFXAb3/
      /vvU1tbqy1/72tdkSkghhLgFDakKqK6ujjNnznDfffeNZpkiSBWQEEKMjiEFgN7kb2PZ9VMC
      gBBCjI4hVQH1pm4WQghx65NRXEIIMUFJABBCiAlKAoAQQkxQEgCEEGKCkgAghBATlAQAIYSY
      oCQACCHEBCUBQAghJigJAEIIMUENORnccDidTo4fP47JZGLRokWYzWY0TePMmTNcvHiRpUuX
      Eh0dPRZFEbc4TdMgHABNA6MZxSBpQoQYriHlAhqulpYWUlJSOHnyJNHR0cyaNYumpibKyspY
      vHgxu3bt4q677uLo0aNMnTqV22+/nd5iqaoq006OGI1Q5TuEqnajxE7CcueXUWy3VibXYPGf
      8B/4KYSDGNJmE/WpF1CiEm92sYS4JY3JG0BaWhrHjh3jwoULPPTQQwA4HA7S09Ox2Xrmtjx+
      /HjEBDPhcBhN02S+gUHSupsIHv9/4HdinLUJY/aiPtuEK3cR3v0/9eVgw3EsD/9+LIt5QzRv
      J8EPfgpqEAC19Szeo7/DtOjpm1wyIW5NYxIATp48icPh4JFHHgF6nurj4+MpLy9n2rRpAKxZ
      s4bTp09TXFzMY489hsnUUzTJBjowLeDBvf2/QVfPPA3hmj1YHvkdpqz5Edt5L7wfuWPracz+
      Dgxxozur20hR3V6Cn9z8exl8nVgsZrSuepSoBLDGScJCIQZpTOpWOjs76e7uZvv27TQ3N7Nn
      zx7S09NxuVy8/vrrLFy4kNOnT3Px4kXS0tLGokh/VsKXytG6Lk/SgxoiVLWbYMXbeHd9F/9H
      v0Tzd6PEZkTuaI5CscUP+7yapqEFXKidtWhqeNjHGSwlIRtDRtGVazDlLMHzyhdw/2EDrt+u
      IljyKmNQq9kvTdNQu5tR3ZeGVAZNDRM49Z94d36bwPE/oIUDo1hKIS4bkzaAG/Hn8gaghYNo
      zosocZlgMI/oU6raWYv7jw+CGtLXGdJmobaW6cvG7MXY7v0R3i3fQG09C+YobPf8L8yzNg77
      vMGKXfje+18Q9GBIzifqU79GdTQQPLMVxRaHZf7jGK4OOkOgaRr4u3uCV9wkFEVB83YROPFH
      VFcr5oL7CDceI3Dkxcs7GS3EfG3PmLcLaOEQvne/R6j8LUDBPPcxrCufG9T37P/oFwQO/0Zf
      Nt/+Wayr/6e8yYhRNyZVQBNduOUs3q1/heZuRbEnE7Xp5xgz54zY8ZWEbCyL/4rAoV+CGsKY
      sxRC/sgyNBwDTcX++Vd6AlFUIoql/55Xms9J4PgfULubMc9YhzFvRZ+bkRb04n//hxD0AKC2
      n8O741uoreV6HX2oZj/Rn38NxWIf8mfSNI1g8cv4D/wEwkGMWQuIevCXKFEJWJd+U98uWP5W
      5I7hAKq3C+MgAoAWcBM4+R+onRcw5S3HNOPeYd90Q+f3fnLzB+gpuyl/HabJdwy4b7Di7chj
      Ve3BuuK7YLJErFcdDQRO/gcEvZiLHsGYUYTqvEjg5EsQcGO+7VMYJ80bVvnFxHTLBIBwOMzB
      gwcxm80sWbJEX//uu+/S1NREZmYma9euHZdPTf59/4DmbgVA87Tje/9H2D/3HwTPbCHceBxj
      2mzMcz6HYjT32Vd1NBIo/hMEPZgLH8YYUQXSQ1EULHd+BUvRZ9CCbpTYTPx7/jfhxmOXN7LY
      UayxKIoBJX7ytQuraXi2fAO1qRiAUNk2bA/8HPP01ZGb+V1oAXdkWZtLI7fprCXcWoZp8oLr
      Xp9+i+G+pN/8AcKNxwmc/BPWRV8f8rH6P4GGb9d3CZ3fB0CobDvWoAdL4cNoQR+apw0lNnPQ
      3Uy17pa+61ytoGmonnZQFAz25J714SBadzNKbAaK0YwhJo3wFVV4SnQyXHVezefE89oTaN3N
      QE/gsz/8It63n0NzNPSsK3sL+2dfwpg+e8iXQ0xMt0z/yo6ODuLi4mhoaIhYn5+fz+OPP059
      fT2XLl1i8+bNfPzxxzeplP1TXc0Ry5q7lcDHL+Df/Tyhsu349/8j/v3/2NO3/crt/E48m58k
      eOKPBEs343ntScKXKvs9h6IoKFHxGD6pKjEXPhzxc/PM+1HMUQOX1XlRv/n3ClXs6ilPwIPq
      bETTVJToFIxZkTd2Q+bcqwplxGBPGvCc/dG8nfrNX1931XUEMMRc1WZktPQ0Bg9A9XYQqov8
      PQlV7CJU8wGuf7sH9+/uxfPSp1G76nvOHfKjOhqu2dZhylsO5stvOkpUIsbJd+Lb/Tzu367C
      /dtV+Pb+gHDLWdy/uxf37+/D/e/rCTeXYl3xHZSYdH0/68rnUAxGNDXUc86Qn/DFk/rNv6ew
      Pvwf/qt+8wcg7CdUvWfAzy5Er1vmDSA1NZWkpCTOnTsXsT4rK4s//elPzJgxgyNHjpCTk0Nu
      bq7+81DjcUJlO1BsCZjnfQFDdErPE563AyUmA2UIYwzCreUET28GowXL3McwxE8Z1H7mGfcS
      OPY7fdk0fQ2hyncitgmd2422/NtgMKJ1t6BEpxC+WIzmvHjFRj5C1Xsxps5A8znQQn4M0anQ
      z1tP8MybkceveBtt2bcGDAKKLR6MVghfrkJSYlJ76vt3/28IuDGk30bUg78kauM/91QVddVh
      mroKU95yvDv+mnDdITCYsNz1FEpi7qCu0dUMSXkYUvJR2z75vhUDpulr+2xnWfAEobqPUVtO
      g9GCdfm3BzW2QTHbUSwxaCFfxGf37f0B+BwAqB3V+D/6BebbPoVv13fRvJ0YknKJ2vRLDIk5
      kcdLyMb+md8TPPUKGEyY530R9VIZwdOv92ygaQRPvUKwYpd+fM3dqr8NRj+5C9XZgCF2Epis
      hNur8W57uqd3kz0Zyx1PgGIA7XK3aEPqLMKNJyLWKdHSiUIM3i0TAK7lj3/8I6tXryYvLw+/
      38/Ro0d54403+OpXvwodVXhf/6r+JBmq2Y/lrqfw7/k/aH4nhpQZRG36OYa4SQOeR+28gOe1
      L8En1R6hyneI/uLrg3ratCz9pn5DN2YUYZ73RbxvPgWdNfo2SlQialc9vh3PoHbVodiTsCx4
      ss8fvRKdgv/IiwQ+fgHUIKZpq7Hd+w8oZltkeZ1NEcua39XTmDpQALDGYF35LP59P4JwAEPq
      TCxzHsP98qMQcPUcu+U0gSMvYlv1HNYlkX3woz79m56nUrMdxZ487Co5xWgh6lO/IXDs92ie
      dswzN2DMWdJ3u6gE7J/7E5qjvufGb4sf1DkVcxTWld+93IidmIdlwRN4Xv9qxHZqVx2+9/8e
      zdvRs9xRg//gvxD1wM8ij6coGNNvw7ju/+jrAg3H6OOTm38vzdUCmoZismBMmqqv9x/4KVpX
      Xc82njaCZ7Zgnvt5gsUvg6ZimroK69JvopisBI79HrQwxtxlmGc/MOBnF6LXLRMA6urqOHr0
      KC0tLRw9epTm5mbuv/9+nE4nR48epbS0lIyMDC5evEhCQgKKohBuLY+oRlDbKvG9/VxPKgFA
      vVSO/9CviFr/9wOeP3R+n37zh54/3FDDUcz5fZ9Kr6YYTFjmPw7zH9fXWe/+G7xbn+5pG7Al
      YF35Xfwf/gy180LP8d1tBE+/EfFHb8xbjjFtFp5XvqD3+AlV7SZYth3L7Z+JOKc5fx3hCwf0
      ZWPWPJTo1AHLCmAuegRz/hpUbyeGhGw09yUIeCK20bqb+t1XUQwoCdmDOs9ADDFp2FZ+d8Dt
      FINxWG8aphn3EpOzFNV9CUPCFDCYMU25i1D13svb5C3vaXi9gtrd1FO37+1AMZiu2ZXWlLsU
      v9muN5RjicGUt5xQxc7L20y/pyfIXyXizY+etiPrkm9iueNJCAVQ4rNQFAOWpf8d89zPQ8iH
      Ejd5SG+0QtwyASA7O5vs7L43lm9961uXFzSNO+fMRjFZUQwGwlf3PlEMfeuVr/pDuxbFnnL1
      GpRPGvWGw5h+G9FPvoXqqMcQlwVmO9r+f4rYRvW0Y1/yNJYFT0DIjxI/mXDDkYjuntf6DKbb
      HsRmMBE6vxdD/BQsd3x50E/jiqKgmawo5mhQjCgxGRgzbyd88eTl4/dTHTPSNG8XgVP/ieZp
      xzTj3kH1qBkKRVHAFofRFqevs63/IYHjv0dtP48xdynm2z6F2lEdUWVnmroS77vfJ1S+AxQj
      ljuewLL4r/pcXyUuC/sjvyNQ/DIoCpZ5f4EheRrBtFmEm4oxZNyOZf5f9Pu9mPLXEWiv0peN
      ucvAHIXhqt9pRVFQrm4HEWKQbokA0NXVNfBGYT/Bs9tRHQ1gMGHKXYoheSa+2ALCrWfBYMQy
      9zHCrWWEG47qu1nT7iIwmOOnLcSXemdPw6GiYC7YQDg6Dwaz7/WY0sATBBwE0hcRqL/cd9+U
      NY+wJwjYQLGBsxusk3EbknqeygEMJqKS5+LtrxyT7u75B3j9gH9wZQ2d39fTcyngxjhpHlH3
      /ght+d8ROPrvqM5GzNPvITxp2Y1/9utRw3i3fINwc0nP8tH/wv7gr64aCDZKZv/F5f93dsOd
      3yJgSCLcdg5T9iL8pmR8x39+eZv9L2BPXYghtaDvsWyTYdF3APADdLth+qd6/gHebg/g6bNb
      MGDA773c4GwOmvA7HH22E+JGjPuBYKFQiEOHDg28Xdl2AqWv6cuK0Yzt/p+g2OJ76llNUT31
      9UEPwXPvonW3YMwoxJi9uN9X8H5pWs+N12BEsScBPU9umq8LFAOKNe76+w94/DCh8x+gtlVi
      iJ+MafoaMFn7buZqJVT1HlrQhylnCYa0WTd23iuFfHi3fTOicdQ8cwPm2z87cucYBNVRj++d
      70WsM01b3fM2dJOFyt8iUPJqxDrr0v/ep1fUjfC98z1UR72+rFjjiNr4z2C0XGcvIYZm3L8B
      KIrC3XffPeB2Pv9egu7IgU32ufkY+7s5rl4/4PG0cIDgma2obZUYpyzENP0elKsChaaG8e//
      R4LlrwMGLPO/iGXJN9Ec9QRLXwelpz59sL2FAFi+cpAbPqmnmt8AABCzSURBVDzwJsOgOhpw
      FxuBy9fSlGslahDfwYiWo7sZd3V8RHWXZeE8rEvGthz9Cc9MxeN9T+8ppUQlYX/gixiir64m
      HD5P6wzCdR36siFxCva7l/c7VkSI4TI+//zzz9/sQlyPpmn9poMON57oSQlwqRJDynQUs+2T
      /uo9LzSGxNyeboiGgWOcFvITPP06wbPbQA2hJObgf/9HBD7+FWrLaUKV76LYkzFmFEaWoeZA
      T/99NQxqiHDjSQwp+fh2/DXh2g8JXzxJqOJtTLMfHFQf/HHBGkOo+n00T5u+yrLwKYwp+SN6
      Gk1Te85hMPX/HVmiQTHo3RwNabOxrnruhq5juLmUwPH/R7j1LMakaX16Tg2WYk/GmDUXgj4M
      6bOx3fO3GEeo4buXIWkqoZr9PQ3IlpiecyRPG/bxBrzeYkIa91VA/eUCCjUcxfv61/SnQ+Pk
      O4h6+N8IVe0hWLYDgz0Jy8KvYbjeiNdemobvvf9F8MwbPcuKAeuK7xD4/+2da3AU15WAv37M
      W+8n6IGMEJIwYDBGgIwNlAFjMLENiR0/lmzZ2dTGiXdrq5KtTXkrW07WP+JNdqt2U+Vgb3Zd
      fuPY3gW/MC8j4wcGZDBgLAGSAAkkobdG8+iZnu7eHw0zakkOQkggLf39un2rp+fOna5z7j3n
      3HO+2Giadi4g5s7C9/Amy0ejh14hUvUbS59UUGHxMQC473wax8z7hvuTrzl6oI3ovufiqSDk
      Gd8ZtPu50ucr7/8c7fzXCJ4M3Hf+Crlo8aD7DMPA6GvBUHoRM6chXIb5Q2s5jHpiO6I3E8fs
      76H3nCH05qNwwbQlTpqN9/4XEeTxa1IxIgH07tNmxI87bcQhtXqwA+WDn6O1HEHwpOFe8ZR5
      cM3mumdCLgViNe9aTAPa2WqM3rM4SlfhKL20eac/RrQPtW5Hvw4dteY9cCZBPwUwVLy/NKUS
      ZHdcqOBMQp6+cpACmGgFS8SkHNzLfzlmz49+8Qe05oOAebpX2fErvA++QqzmXXSlB0fpXUi5
      M80Il5Q8GMY5jf5ozYcIvfXDeLhv7FQVYlZZ4n/CTFuhd55Eyp05ej9slBFcSYN2ncPFiIYw
      tAiiO43ovufMXFCY/iNlx1P4HtuKMIR/yeb6YkIqgEEnPUXZNBmMBMmJ4PBiRPoSj0vKQZ7/
      KMr2X4IaQvBl46p8YtBHxYxiPPc9i/rVqyDIOG/5S8ScGWiN++JH8uXpK5FuGLy6vZ7R+6eu
      xsz7E37rsfgZCPWrTXjvf2HEwk+teS8u/ME0FwqewSkpvi0Z3kjRexpRv9lingSeue6KMqGO
      FMMwUI/+iejnv8eIRZBLVgw6s2EoPRhKrx0+ajMxFYDj5g3ETn2M3ll/IeXAj4eI0x8eguzG
      ddvfoez8NcTCCEm5OBc9jphdji9/HkbvOcSMYgT34AgfQRCQCxcgFy6w9LvX/ht6Zx0gmKYL
      u26tBbl4GVrT/vi14EmLC38AYmHU4++PWAEMOpglDD3/RnRw+OVI0ftaCb2xASPUCYB6bDO+
      R94c8r0ZSwz/OSJVzyR2PzXvmruffki5sxBG0WFtM3GZkApATMrG+9Ab6B3HzbTGqYVXlAVU
      Ll+Lr2ABur8ZKWtaPJxT8GXDME/P9kcQJaQBMeGGrpmrLnfKuHPCGYaBofSY+XHGwixgGBgR
      v1nE3eHFMedhQCB26mPE9BuQy9YQfvNRMBJx74Jr5IVqHHMfJtaw28wjJEg4F/yVuUus25m4
      SZBGdQcQq/8oLvzBFMSxxr2XbZK8UvS+FsvuB0AqrMAxaz2xhirEtEKcix4fVZ+OzcRlfEmi
      b8FQQ6jHtmAEziOXLEfMnYXgcI9aTn1BEBCScxGTc0fleQPRu88Q/uDv0btPIaZNwb36GaTM
      kjH5rsvFiAZQPnySWOMXCK4U3Hf8I1LxslFLq21oUSJVv0Gt/QBBduJc9BOccx7EOW8Dznnm
      gSvD0HHO+wHRgy+aET/Z5TgGpLa4HERfFt4HX0dvrzWdp+lFGOEuYnW70NtrQRBxzvsBQtpl
      hOdegqHOgAiu5FF7/nCRssoQknLNsy8AgoQ8dSlyUSXOmx+56uOxGd+M/yigWIzIu0+gnf7U
      7JCceL77n8ijeOhmrAn9z1+jnfksfi3lz8dz/3+Pi1VYZO+zRL94NtHhSibpRx+NWtiq+s07
      KNuejF8Lvix8P9wxKJ7dMHT0rlMQ6UPMLh9xiOafw1AVUwG4khEzpo7q/BtqmPA7f2tmQgXk
      6atwr3nmmuz2tPYTRPc/jxHx45i57ooK3dj8/2b87wAMLSH8AbQo6rHNE0oB6F0N1uueM2aG
      z3GgAAaOjUgfRrB91BK66f0ynsIFu3s0CAOiqgRBvKI49+EgONxIeXMvfeOInu3Bc9+zF3YY
      EmJ22TXz/UjZpXju/t01+W6bicW1l0CXRBjkxBvt6I2xRr7hNsu1mX5ifDiGB45NTJ+KkJI/
      as+XplRaqlsJviy4yo7Rq4UgOZAmzUbKvdF2/I8ymq6z91gTr2w/wsETLVw0XGi6Tl8ogq6P
      a0PGZWEYBsFwlGhMs/YpUaLq0AWJRsr4PwkMCOgXMlEaCKkFuJf/0zWxr44UqWABxoU6ufL0
      lbhv/9m4icEWs0vNcwqqmfjNvfLXiMOocTBchJQ8xPQbMBQ/UnYZ7mW/GDNfi83wMQyDk2e7
      2H6gnrbuEAU5KYiCQENzN9sO1NPaFaAwOwVJElFjGkokhkMW46akofpimk44osb7DMMgHIlh
      GCBJ5lqzuaOPD/fVcbq1h7ysZJwOCcMwUKIxdMNAvnCfpuuEFBVZNq/f2P0NG7d8yTen29lz
      +AxpSR48LpmnX9rDqzuOcuB4M7OLc1FjGlv31VFzpoPc9CQ8LtPUqERjqDENWTLH1htU2La/
      nmOn2shK9eJ1Ozja0Maug6fwByPkZyUjigK6YRBUVERRQBTN31RzpoMd1Q10+RXys1KQRIGo
      qhFRE88HiMY0lGgMhzRg3i70AZxq6eHD/fW0dPZRkJOCphv8/u39bHynmh0HGshO85Gb7uMP
      mw/w7JZqth+oJyPZQ2FOyqiY9ca/D0DTEEURvbMOI9RphrC5kq71sGxsJjRf1bXy9It7UDWz
      2NCSOUWsWjCNp16oQo2ZfZUzC1hZMY3n3/mSvlCEeaWTeWL9AmobO3junS/pDSjMKZnE36xf
      QH1zNxu3HKC7T2FWcQ4/ubeCTR99zadHGnG7ZDbceRMl+Rn8w3M76QuZUUplhZk89dgy3th1
      jF0HG3DKEt+/YxalhRn8x9v7ae0KUJKXzk/XL+DJ53fR6Q/Hxz8lN5VUn4ujDW3xvllTs2nr
      CdHWbdbtyEnz8a8/vZOPDp3if/fUohsGdy+azncWl/KLjbtobDOzq2Yke1hTOZ3XdhxFvyAO
      1y+ZwT2LS/n3t/ZxvKmTnDQfT6yvoKM3xG9f/xztwo7jrgUlzJyazUvbDhOOxFg8u5AfrZ3H
      gdpmXtj6FSFFZeGN+fz4nvl8VdfKH987SECJUlGWx/JbivnnF/fEV/oLZuQz84ZsXtiaKMnq
      dTm47/ZyXtuZqLftccps/Nla0pKv3E92VRRAMBikqqqK9PR0Kisr46uD6upqWltbWbp0KSkp
      Q5sFhkoFYWNjc2X8y2uf8dnXiWyjkigwqziHw3XW4vZel4NQJFFD4/5lN7KjuoGeQOJU9brb
      y/nkSCMdvYlzFZMzk2jpDMSvXQ6JJXOK2FFt9TmtrZzOe3sTZV4dkkhqktvyrIUz8vn6dBvB
      cGIcGSkeDMOgu0/hz7Fm0XS27jtpKbc98DuHItXn4qZpuXxypDHeV5SbSsoApSOJArIkEuln
      mvmLlbN5e08N4UgiW8EjK2az+dNagkriN3jdDkKKtT7J7OIcy/MByqdkUdvYYen77eMrKS0c
      eT2Si1wVH8Ann3zC3LlzCQQCNDebxUu6urpoaWmhsrKS3bt34/f72bt3L01NTZd4mo2NzZXi
      dlrjPyRJJNljNUsKAhbhD3C4/jy9QavQPdrQZlEIgEX4A0RUbdA9AtDaFbT0qZpuEf4A5zr8
      pHitY8tO9TK72GpKzMsabBZu7wkycIl7vjs46L6LJpn4tSxxtt1v6WvrCTJwvawbhkX4A1Qf
      b7EIf4AvT7RYhD9AeMDcioJARbnV/5aT7mP1whL6G3uyUr0UZI+OH+2qRAGFQiHy8vKIRCK0
      tbWRn59Pe3s706ZNIzMzE03T2L17NyUlJWiaOZmxWAxd103nRzBIX18fycnmH9y/HQgESEpK
      it93sR0KhfD5fJa2rusoioLX67W0NU0jGo3i8Xgs7Vgshqqq8XYsFsPtdqOqKpqmxdu6ruNy
      uSztaNTc5jqdTks7EokgiiIOh8PSVhQFWZaRZdnSDofDOByOeNvpdCJJkqUdCoVwu92Iomhp
      B4NBvF4vgiBY2hfnrP/8fdu8DmeOdV0nHA4Pe44vvhP9x+nxeMZszN/2Lgw1Zk3TiEQil3wv
      Lr4LA9+Ly30XBEEY8Xtxue9C/zleNX8Kh0620tUXRhIFvrtkBuWTPdQ2ttPRG0YUBFZXFFF9
      so3z3QmBXFGSSVhRaeonHJfOmUJM0zjdmihYM2daDkca2uLCNz3Zzd3z82nrDnDmvB8BuHVm
      HgvLcjh4siXuxPW5HeRlJXPybCIV9s0lkyjI8vJfW78mGtPwuGTW3zadyekuPE6JuuZuygoy
      WXnzZP74YQ3HTpur5RuLMllzSz5H6s/HhbQsidy3uARNi3HwpLnSLivM5O6FU3nu/cMEw6YP
      43tLy2lq7eRUSyIfWFFOCvcvKaWpzU9vMIIsiaxdOJU9R5vp6jPNU4IAqyqKae8J0Ok3FZ4A
      3Dojh87eIO29CTPWPYum8nnNedp7QoiCwF3zi1g2exJKuIzqug7Sk9zcOXcSpUUZbFgxg33H
      20j2Olm3uITe7g5ioyDTrooJaPPmzaxevZqamho8Hg9lZWU0NjZy7tw5Kioq2LJlC0uXLmX/
      /v3ous7atWvjn7VNQDY2Y4M/GOFEUydZqV6KJqUiCAJ9oQjHmzrJSPYwdXIa5zr6eHnbYTp6
      w9x20xTuXVxGa3eAl7cdoa07SOWsAtbdVk57b4iXtx2htSvAwhn5rFtSzu5Dp9lZ3UCSx8lD
      K2YxvSATJRqj9kwHbpfM9IIMREHg48Nn2PpFHW6nzPfvmEleVjIvbTvM6ZYeZhfn8tCKWbgc
      Eq1dAZra/BRPTicrzTvkb1JjGrWNnYBB+ZQsHLLEoZMtvP1xDZpucO/iMhbemI+mG5xo6kTV
      dGZMycLpkOj0h2ho7iYvK5m8zGSiMZ0/fXSMQydbmJKbyoZVN5GZ4qUnoHDybBe56T4Kc1Ko
      b+7m9Z1H8YeiLL9lKqsqpnG6tYdXdxylN6Cw7OaprFlUQlObn5e3H6G7L8ySOUWsvbWUkKJS
      22gK++K89Kt+XuOqKID6+nr27t2LYRg88MADVFVVsXz5cjZt2oQkScyZMwe/309XVxeKorB+
      /fr4Z20FYGNjYzM2XLUoIFVVkSTJUtxF13U0TcPhcGAYBtFoFKfTadGCtgKwsbGxGRsmRBio
      rQBsbGxsRp8JcBLYxsbGxmYssBWAjY2NzXWKrQBsbGxsrlPGfTZQQRDisdM2NjY2NqPHuHcC
      29jY2NiMDbYJyMbGxuY6xVYANjY2NtcptgKwsbGxuU6xFYCNjY3NdYqtAGxsbGyuU/4P6CwZ
      aNrMFpcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
