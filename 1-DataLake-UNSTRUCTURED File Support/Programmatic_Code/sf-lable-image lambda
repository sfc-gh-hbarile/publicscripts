import json
import boto3
import logging
from urllib.request import urlopen

logger = logging.getLogger()
logger.setLevel(logging.WARNING)

def lambda_handler(event, context):
    rek=boto3.client('rekognition')
    
    json_return_message = []
    error_msg = []
    exception_msg = []

    body = json.loads(event["body"])
    status_code = 200

    for row in body["data"]:
        row_number = row[0]
        presigned_url = row[1]
        # Download an image from presigned url
        contents = urlopen(presigned_url).read()
        try:
            #process using base64 encoded bytes
            response = rek.detect_labels(Image={'Bytes': contents },
                MinConfidence=60,
                MaxLabels=10)  
            
            #Get the labels
            labels=response['Labels']

            output_value = {}
            output_value["labels"] = labels
            output_value["url"] = presigned_url

            output_response = {}
            output_response["response"] = output_value
            
            row_to_return = [row_number, output_response]
        
        except Exception as e:
            logging.error(e)
            exception_msg = {
                'exception' : "Exception: %s" % (json.dumps(str(e)))
            }
            row_to_return = [row_number, exception_msg]    
                
        json_return_message.append(row_to_return)               
        json_compatible_string_to_return = json.dumps({"data" : json_return_message}) # build the JSON string that we will send back
     
    return {
            'body': json_compatible_string_to_return
        }
